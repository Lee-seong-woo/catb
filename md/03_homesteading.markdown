# 3장 얼누리의 개간

송창훈 역[^3-1]

[^3-1]: 역자주 이 글의 원문은 <http://www.catb.org/~esr/writings/cathedral-bazaar/homesteading/>에서 볼 수 있으며, 번역에 사용한 판본은 2002년 8월 2일에 개정된 3.0판이다. 한국어 번역문의 최종 개정일은 2013년 12월 19일이다.

## 요약 

오픈소스 이용허락`license`[^3-2]에 정의되어 있는 오픈소스의 공식적인 이념과 해커들의 실제 행동 양식 사이에는 모순이 존재한다. 이 글은 이러한 현상을 살펴본 뒤에 오픈소스 소프트웨어의 소유와 통제를 규율하는 실제 관행을 검토해 두 가지 관행이 모두 로크의 토지 소유권 이론에 상응하는 기본적인 재산권 이론을 함축하고 있음을 밝힐 것이다. 또한, 그 결과를 자신의 시간과 에너지 그리고 창조성을 무료로 선물함으로써 명성을 획득하기 위해 경쟁하는 ‘증여문화’로서의 해커 문화에 연결시켜 볼 것이다. 마지막으로 해커 문화에서 발행하는 분쟁 해결을 위해, 이러한 분석이 가진 중요성을 살펴본 뒤에 이를 몇 개의 규범적 결과로 발전시켜 보려고 한다.

[^3-2]: 역자주 이 글에서 사용한 소프트웨어 저작권 관련 용어는 다음과 같다.<br/> 오픈소스 소프트웨어(open source software) 폐쇄소스 소프트웨어(closed source software) 자유 소프트웨어(free software) 비자유 소프트웨어(nonfree software) 공중영역 소프트웨어(public domain) 사유 소프트웨어(proprietary software) 이용허락(license) 지식재산권(intellectual property right) 

## 모순의 소개

바쁘고 극히 생산적인 인터넷 오픈소스 소프트웨어 세계를 잠시 관찰해 보면 오픈 소스 해커들이 믿는다고 말하는 것과 그들의 실제 행동 사이에 존재하는 흥미 있는 모순, 즉 오픈소스 문화의 공식 이념과 실제 관행 사이의 모순을 발견하게 된다.

문화란 적응력 있는 기계이며, 오픈소스 문화는 인식 가능한 압력과 공세에 대한 반응이다. 일반적으로 자신을 둘러싼 환경에 대한 문화의 적응은 의식적인 이념과 무의식적이거나 반의식적인 암묵적 지식 모두로 나타난다. 그리고 무의식적 적응 형태는 흔히 의식적인 이념과 부분적으로 모순을 갖기도 한다.

이 글은 이러한 모순의 원인을 밝혀보고 그것을 통해 오픈소스 문화를 유발한 압력과 공세가 무엇인지 알아볼 것이다. 또한, 해커 문화와 관습에 대한 몇 가지 흥미있는 점들을 추론해 보고 해커 문화의 암묵적 지식이 더 큰 힘을 가질 수 있는 방법들을 제시해 보려고 한다.

## 해커 이념의 다양성

(해커들이 믿고 있다고 말하는) 인터넷 오픈소스 문화의 이념은 그 자체만으로도 꽤 복잡한 주제다. 모든 구성원은 (자유롭게 재배포할 수 있고 쉽게 개량할 수 있으며 필요할 때 알맞게 고칠 수 있는) 오픈소스가 좋은 것이고, 공동 노력을 많이 기울일 가치가 있다는 사실에 모두 동의한다. 또한 이러한 동의를 통해 오픈소스 문화에 참여하게 된다. 그러나 다양한 하위문화와 개인이 가진 이러한 믿음에 대한 근거는 상당히 다양하다.

다양성의 한 기준은 열성이다. 즉 오픈소스 개발을 단지 (좋은 도구나 재미있는 장난감, 즐거운 게임 등을 만들기 위한) 목적을 위한 편리한 수단으로 생각하는지 아니면 그 자체를 목적으로 삼는 지로 구분하는 것이다.

매우 열성적인 사람은 “자유 소프트웨어는 내 삶이야! 나는 유용하고 아름다운 프로그램과 정보 자원을 만들기 위해 살고 있고 그것들을 무료로 공개할 거야”라고 말할지 모른다. 중간 정도의 열성을 가진 사람이라면 “오픈소스는 좋은 거지. 나는 도움이 될 수 있게 기꺼이 많은 시간을 투자할 거야”라고 말할지 모른다. 또한, 열성이 거의 없는 사람이라면 “그래, 오픈소스는 때때로 괜찮아. 나는 오픈소스를 사용할 것이고 만든 사람들을 존경해”라고 말할지 모른다.

다양성의 또 다른 구분 기준은 상업 소프트웨어와 상업 소프트웨어 시장을 지배하는 기업에 대한 적개심이다.

상업적인 것을 매우 싫어하는 사람이라면 “상용 소프트웨어는 도둑질이고 약탈이다.[^3-3] 나는 이런 해악을 없애려고 자유 소프트웨어를 만든다”라고 말할 지 모른다. 중간 정도의 반감이 있는 사람이라면 “상용 소프트웨어는 일반적으로 괜찮아. 왜냐하면 프로그래머가 수입을 얻을 수 있으니까. 하지만 조잡한 제품으로 쉽게 성공하고 주변에 영향력을 행사하는 기업은 나빠”라고 말할지 모른다. 반감이 없는 사람이라면 “상용 소프트웨어는 괜찮아. 내가 오픈소스 소프트웨어를 사용하거나 만드는 것은 단지 그게 더 좋기 때문이야”라고 할지 모른다. (이 글의 초판이 발표된 이후로 요즘은 오픈소스가 소프트웨어 산업의 일부로 성장했기 때문에 “상용 소프트웨어도 소스 코드를 얻을 수 있거나 내가 원하는 오픈소스의 역할을 하는 한 나쁘지 않아”라고 말하는 사람이 생겨났을지 모른다.)

[^3-3]: 역자주 리처드 스톨먼은 1982년에 자신이 작업한 리스프(LISP: LISt Processing) 인터프리터를 MIT 인공지능연구소의 스핀오프(spin-off) 회사 심벌릭스(Symbolics)가 상용으로 사용할 수 있도록 허락해 준다. 그러나 개량된 소프트웨어의 소스 코드를 사용하고 싶다고 스톨먼이 요청했을 때 심벌릭스는 이를 거부한다. 기업이 해커 공동체에서 소스 코드를 자유롭게 가져간 뒤에 자신의 이익을 위해서만 쓰고 개량한 결과물을 공동체로 다시 돌려주지는 않는 행위를 스톨먼과 FSF는 소프트웨어 약탈(software hoarding)이라고 규탄한다. 경우에 따라서는 ‘소프트웨어 사재기’란 표현이 적절할 수 있지만, 이 글에서는 소프트웨어 약탈로 옮긴다. ‘심벌릭스 전쟁’으로도 표현되는 당시의 상황은 『Free as in Freedom, Sam Willams, O’ Reilly, 2002, ISBN: 9780596002879』의 7장 ‘[피할 수 없는 도덕적 선택(A Stark Moral Choice)](http://oreilly.com/openbook/freedom/ch07.html)’ 부분에서 자세히 참고할 수 있다.

오픈소스 문화에는 앞서 지적한 구분들의 조합 가능한 9가지 태도가 모두 나타난다. 그 차이를 살펴보는 것이 의미 있는 이유는, 이들이 각각 다른 목표와 다른 적응 및 협력 방식을 암시하고 있기 때문이다.

역사적으로 볼 때, 해커 문화 안에서 가장 뚜렷하고 잘 조직된 부류는 매우 열성적이면서 몹시 반상업적이었다. 리처드 매슈 스톨먼`RMS: Richard Matthew Stallman`이 설립한 자유 소프트웨어 재단`FSF: Free Software Foundation`은 1980년대 초반부터 오픈소스 개발의 큰 부분을 지탱해 왔다. 이맥스`Emacs: Editor MACroS`와 GCC`GNU Compiler Collection`를 포함한 도구들은 여전히 인터넷 오픈소스 세계의 기본 도구들이며 예측되는 미래에도 계속 그럴 것으로 보인다.

오랜 세월 동안, FSF는 해커 문화에서 아직도 필수적인 많은 도구를 생산해 온 오픈소스의 가장 중요하고 유일한 중심이었다. 또한, FSF는 해커 문화의 외부에서도 인식할 수 있는 기관의 형태를 갖추고 오랫동안 오픈소스를 지원해 온 유일한 후원자였다. FSF는 자유 소프트웨어`free software`란 용어를 효과적으로 정의했는데, 이것은 대립적인 의미를 의도적으로 담은 표현이다. (최근에 만들어진 [오픈소스](http://opensource.org/)는 반대로 그러한 부분을 의도적으로 피했다.)

따라서 해커 문화의 안과 밖에서 인식되는 해커 문화의 성격은 FSF의 열성적 태도와 반상업적 목표와 같은 것으로 간주되는 경향이 있었다. RMS[^3-4] 자신은 그가 반상 업적이 아니라고 부정하지만, 열성적인 그의 지지자들과 함께 그의 프로그램들은 많은 사람에게 그렇게 받아들여졌다. “소프트웨어 약탈을 몰아내자!”라는 FSF의 열성적이고 확고한 행보는 해커 이념에 가장 가까운 것이 됐고, RMS는 해커 문화의 지도자에 가장 근접한 존재가 되었다.

[^3-4]: 역자주 리처드 스톨먼은 RMS로 흔히 지칭된다. 그가 사용하는 로그인 및 이메일 이름도 rms다.

FSF의 이용허락 규정인 GPL`General Public License`은 FSF의 태도를 표현하고 있으며 오픈소스 세계에서 가장 널리 사용되고 있다. 노스캐롤라이나 대학교 채플힐 캠퍼스`UNC: University of North Carolina, Chapel Hill`가 운영하는 [메타랩](http://web.archive.org/web/19990117032750/http:/metalab.unc.edu/)`Metalab, 이전의 SunSITE`[^3-5]은 리눅스 세계에서 가장 크고 인기 있는 소프트웨어 공공 자료 보관소archive인데, 1997년 7월을 기준으로 이곳에 있는 소프트웨어 패키지의 거의 절반이 GPL을 명시적인 이용허락으로 사용하고 있다.

[^3-5]: 역자주 썬 마이크로시스템즈(Stanford University Network Microsystems)의 후원으로 세계 여러 대학이 1992년부터 운영한 공공 자료 보관 사이트들을 통칭 썬사이트(SunSITE)라고 부른다. 그 중에서 미국 노스캐롤라이나 대학교 채플힐 캠퍼스가 운영한 것이 sunsite.unc.edu인데 1998년 12월 1일 metalab.unc.edu로 이름을 바꾼다. 그 후 공공 자료 보관소의 특성을 더욱 강화하면서 2000년 9월 6일 [아이비블리오(ibiblio)](http://www.ibiblio.org/)로 이름을 다시 바꾸어 현재까지 운영되고 있다.

그러나 FSF가 유일한 존재는 아니었다. 어디서나 그렇듯이 해커 문화 안에도 좀 더 온건하고 대립적이지 않은 시장 친화적 부류가 있었다. 이런 태도를 가진 실용주의자들은 이념보다는 FSF 이전부터 존재했던 초기의 오픈소스 활동에 근거한 공학 전통에 더욱 충실했다. 이러한 전통에는 최우선적으로 유닉스와 상업적으로 변모하기 이전의 인터넷에 공존한 기술 문화가 있다.

전형적인 실용주의자의 태도는 적당히 반상업적인 온건함이다. 또한, 기업에 대한 주된 반감도 본질적으로 ‘약탈’에 대한 것이 아니라 유닉스와 공개 표준 그리고 오픈소스 소프트웨어를 융합하는 수준 높은 접근 방법을 기업이 거부하는데 대한 것이다. 만약 실용주의자가 혐오하는 것이 있다면 그것은 일반적으로 ‘약탈자’보다는 IBM`International Business Machines`이나 현재의 마이크로소프트`Microsoft`와 같은 소프트웨어 체제 위에 군림하는 허울뿐인 제왕[^3-6]이다.

[^3-6]: 역자주 허울뿐인 제왕(King Log)은 이솝 우화의 하나로 그 내용은 다음과 같다. 「개구리들이 자신들의 단조로운 세계에 싫증을 느껴 신에게 왕을 보내주길 청하자, 신은 통나무를 하나 던져 준다. 처음에는 통나무를 왕으로 알고 숭배하지만 결국 아무것도 못하는 멍텅구리 나뭇조각임을 알게 된 개구리들은 진짜 왕을 보내 달라고 신에게 다시 졸라 댄다. 이에 짜증이 난 신은 물뱀(판본에 따라서는 황새)을 왕으로 보내주고 결국 개구리들은 모두 물뱀(황새)에게 잡아 먹히고 만다.」이 우화의 교훈은 현재에 만족하지 않고 욕심을 부리면 화가 된다는 것이지만, 이 글에서는 우화의 내용이 아닌 단어의 의미 그대로 능력 없이 단지 체제 위에 군림하는 대상을 비꼬는 말로 사용되었다.

실용주의자에게 GPL은 그 자체의 목적보다 하나의 수단으로 중요하다. 그들에게 GPL의 주된 가치는 ‘소프트웨어 약탈’에 대항하는 무기가 아닌 소프트웨어의 공유와 ‘시장 모델’ 공동체의 성장을 장려하는 도구로서의 측면이다. 실용주의자는 상업주의에 반대하는 것보다 좋은 도구와 프로그램에 높은 가치를 부여하기 때문에 고품질의 상용 소프트웨어를 이념적인 고민 없이 사용하기도 한다. 또한 폐쇄 소프트웨어`closed software`에서는 이룰 수 없는 기술 품질에 대한 표준이 오픈소스에서는 가능하다는 사실을 경험을 통해 알고 있다.

해커 문화 안에서 실용주의자들의 입장은 오랫동안 주로 FSF의 방침이나 특히 GPL을 그대로 받아들이지 않으려는 것으로 나타났다. 이런 태도는 1980년대와 1990년대 초반 버클리 유닉스 애호가와 BSD`Berkeley Software Distribution` 이용허락 사용자 그리고 BSD 소스를 기반으로 오픈소스 유닉스를 만들려던 초기의 활동에서 볼 수 있다. 그러나 이러한 활동들은 시장 모델 공동체를 만드는 데 실패했고 이어서 심각하게 분열돼 무력해 졌다.

1993년부터 1994년 사이에 리눅스가 폭발적으로 성장하고 나서야 실용주의자들의 힘이 응집될 실제 기반이 마련된다. 리누스 베네딕트 토르발스`Linus Benedict Torvalds`는 RMS와 대립한 적이 없었지만, 상업 리눅스 산업의 성장을 지켜봄으로써, 그리고 특정 작업에 고품질 상용 소프트웨어가 사용되는 것을 공개적으로 지지함으로써, 또한 이러한 점들을 통해 해커 문화의 가장 순수하고 광적인 요소들을 은근히 조롱함으로써 실용주의자들이 원했던 인물이 됐다.

리눅스의 급격한 성장으로 인한 부작용은 FSF의 목표를 단지 역사적인 관심으로 놔둔 채 리눅스 자체를 추종하는 새로운 해커가 많이 등장했다는 점이다. 리눅스 해커들의 새로운 경향은 리눅스 운영체제를 ‘GNU 세대의 선택’이라고 표현하기는 하지만 RMS보다 리누스 토르발스를 더 흉내 내는 것이다.

시간이 흐를수록 반상업적인 순수주의자들은 더욱 소수가 되어갔다. 네트스케이프`Netscape`가 1998년 2월에 내비게이터`Navigator` 5.0판의 소스 코드 공개 방침을 발표한 일은 얼마나 많은 것이 변했는지를 분명히 말해 주었다. 이 사건은 기업 세계가 자유 소프트웨어에 더 많은 관심을 갖게 했고, 곧이어 이 전례 없는 기회를 이용하기 위해 ‘자유 소프트웨어’라는 용어를 오픈소스로 바꾸자는 요청이 해커 문화 안에서 제기됐을 때, 여기에 관련된 모든 사람이 놀랄 정도로 즉각적인 동의가 이루어졌다.[^3-7]

[^3-7]: 역자주 ‘오픈소스’라는 용어가 만들어진 상세한 과정과 설명은 리처드 스톨먼의 전기 『Free as in Freedom, Sam Willams, O’Reilly, 2002, ISBN: 9780596002879』의 11장 [오픈소스](http://oreilly.com/openbook/freedom/ch11.html)에서 참고할 수 있다.

1990년대 중반까지 더 많은 개발이 이루어지면서 해커 문화 내부의 실용주의 세력도 점점 더 다변화됐다. 나름대로 자의식과 카리스마 있는 지도자를 가진 독립 성향의 공동체들이 유닉스와 인터넷을 근간으로 생겨나기 시작했다. 이 중에서 리눅스 이후의 가장 중요한 공동체는 래리 월`Larry Wall`의 펄`Perl` 문화다. 이보다 작긴 하지만 역시 중요한 공동체가 존 오스터하우트`John Ousterhout`의 티클`Tcl: Tool Command Language` 언어와 기도 반 로섬`Guido van Rossum`의 파이썬`Python` 언어를 중심으로 만들어졌다. 이들 공동체는 모두 나름의 이념적 독립성과 GPL이 아닌 이용허락 방식을 갖고 있다.

## 방종한 이론과 순결한 실천

하지만 이 모든 변화에도 ‘자유 소프트웨어’ 또는 ‘오픈소스 소프트웨어’가 무엇인가에 대해 폭넓게 합의된 이론은 유지되고 있다. 이 이론의 가장 명확한 표현은 다양한 종류의 오픈소스 이용허락에서 찾아볼 수 있는데 여기에는 모두 공통된 요소가 포함돼 있다.

1997년에 이러한 공통 요소를 다듬어 [데비안 자유 소프트웨어 지침](http://www.debian.org/social_contract)`DFSG: Debian Free Software Guidelines`이 만들어 졌으며, 그 후에 [오픈소스 정의](http://korea.gnu.org/people/chsong/copyleft/osd-korean.html)`OSD: Open Source Definition`로 발전되었다. OSD에 따른 오픈소스 이용허락은 오픈소스 소프트웨어의 어느 부분도 개작할 수 있는 (또한 개작한 소프트웨어를 자유롭게 재배포할 수 있는) 누구나 가질 수 있는 조건 없는 권리를 보장해야만 한다.

따라서 ([GPL](http://korea.gnu.org/people/chsong/copyleft/gpl.ko.html), [BSD 이용허락](http://opensource.org/licenses/bsd-license), [펄의 예술적 이용허락](http://www.perlfoundation.org/artistic_license_2_0) 등의 OSD를 따르는 이용허락과) OSD의 암묵적 이론은 누구나 그 어떠한 것도 해킹할 수 있다는 것이다. 누구도 12명 중 6명이 (FSF의 GCC 컴파일러와 같은) 공개된 오픈소스 제품을 구하거나 소스 코드를 복제하고 다른 형태나 방향으로 개작하는 것을 막을 수 없으며, 개작한 결과물에 대해 자신의 권리를 주장하는 것 또한 가능하다.

이러한 종류의 확산을 분기`fork`라고 부른다.[^3-8] 분기의 가장 중요한 특성은 잠재적 개발자 공동체를 분리시켜 결국 코드가 서로 교환되지 않는 경쟁 프로젝트가 된다는 것이다. (겉으로 보기에는 분기처럼 보이지만 그렇지 않은 예로, 급증하고 있는 리눅스 배포판을 들 수 있다. 이런 경우는 분기로 여겨지지 않는데 그 이유는 여러 프로젝트가 대부분 공용 코드를 사용하고 개별적인 개발 노력의 이점 또한 기술적으로나 사회적으로 낭비하지 않고 함께 이용할 수 있기 때문이다.)

[^3-8]: 역자주 쇠스랑 발이 밑부분에서 3개로 갈라지듯이 본래의 프로젝트에서 독자적인 프로젝트로 분리돼 나가는 것을 포크(fork) 또는 포킹(forking)이라고 한다. 이 글에서는 분기로 표현한다.

오픈소스 이용허락은 유사 분기는 물론이고 분기를 제한하지 않는다. 사실 암묵적으로 두 가지를 모두 장려한다고 주장하는 프로젝트도 있다. 그러나 유사 분기는 흔하지만 분기는 거의 일어나지 않는다. 중요한 프로젝트가 나뉘는 일은 매우 드물고 만약 그렇게 될 경우에는 프로젝트의 이름이 바뀌면서 대중적인 자기합리화가 폭넓게 이루어진다. ‘GNU 이맥스와 엑스이맥스`XEmacs`’, ‘GCC와 EGCS`에그스: Experimental GNU Compiler System`’ 그리고 BSD 분파가 이런 경우에 해당하는데, 프로젝트를 분기시킨 사람은 자신이 매우 강력한 공동체의 규범을 어기고 있음을 느꼈을 것이 자명하다.[^3-9]

[^3-9]: 원주 리눅스와 BSD 세계의 한가지 흥미 있는 차이는 리눅스의 경우에는 커널과 이와 관련된 핵심 유틸리티들이 결코 분기되지 않았다는 점이다. BSD에는 최소한 3번의 분기가 있었다. 이 사실이 흥미로운 것은, BSD 모임의 사회구조는 프로젝트 분기를 막고 권한을 명확히 규정하기 위한 방식으로 중앙집권화돼 있지만 리눅스 공동체는 그러한 제한 없이 사회구조가 분산적이고 확실한 형태가 없다는 점이다. 프로젝트에 있어 개발 자체가 통제되지 않고 공개돼 있으면 오히려 분기가 일어나지 않는 경향이 있다.  헨리 스펜서(Henry Spencer, <henry@spsystems.net>)는 정치체제의 안정성은 일반적으로 그 체제의 정치 과정에 존재하는 진입 장벽의 높이에 반비례한다고 말한다. 그의 분석을 인용하면 다음과 같다. 「상대적으로 열린 체제인 민주주의의 주된 강점 중 하나는 체제를 공격하기보다 체제를 통해 노력함으로써 대부분의 잠재적 혁명가가 자신의 목표를 향해 전진하기 더 쉽다는 점이다. 이러한 강점은 기성 정당들이 ‘장벽을 높여’ 불만을 가진 작은 단체가 그들의 목적을 향해 전진하는 것이 더욱 어려워지면 쉽게 약화된다. (경제의 측면에서도 비슷한 원리를 찾아 볼 수 있다. 개방 시장에는 극심한 경쟁이 있고 일반적으로 가장 싼 가격을 가진 최상의 제품이 존재한다. 이 때문에 기성 회사들은 최상의 이익을 위해, 예를 들면 컴퓨터상에서 정교한 RFI(Request For Information) 테스트를 요구하도록 정부를 설득하거나 대규모 자원 없이는 효과적으로 구현할 수 없을 정도로 복잡한 ‘합의에 따른’ 표준을 만들어 시장 진입을 더욱 어렵게 만든다. 극도로 높은 진입 장벽이 있는 시장은 혁명가들로부터 가장 강한 공격을 받게 된다. 예를 들면 인터넷이나 ‘미국 법무부 대 벨 시스템’의 소송 사례를 들 수 있다.) 역자주 AT&T의 미국 내 전화 시장 독점에 대해 법무부가 제기한 소송 결과로 AT&T가 1984년 8개 회사로 분할된 예를 말한다. <http://klri.re.kr/kor/publication/pubReseachReportView.do?seq=408> 정치에 있어 낮은 진입 장벽을 가진 열린 과정은 분리독립보다 참여를 촉진한다. 왜냐하면 분리독립에 따른 높은 간접비용 없이도 성과를 얻을 수 있기 때문이다. 그 성과가 분리독립으로 이룰 수 있었을 것에 비해 감동이 적을 수는 있다. 그러나 낮은 비용으로 이룬 것이고 대부분의 사람은 감수할 만한 선택으로 생각할 것이다. (스페인 정부가 프랑코 정권의 바스크 억압 법률들을 폐지하고 제한적인 지방자치와 독립된 학교 설치를 허용했을 때, 대부분의 바스크 분리주의 운동(Basque Separatist Movement)은 거의 하룻밤 사이에 자취를 감췄고 극단적인 마르크스주의자들만이 그것만으로는 부족하다고 주장했다.) 역자주 스페인 지역주의에 대해서는 다음 자료를 참고할 수 있다. <http://scholar.ndsl.kr/schArticleDetail.do?cn=JAKO200120149332391>」

사실, (누구나 무엇이든 해킹할 수 있다는 합의 이론에 모순됨에도 불구하고) 오픈소스 문화에는 널리 인정되고 있지는 않지만 정교한 소유권 관습이 있다. 이러한 관습이 누가 소프트웨어를 수정하고, 수정해야 할 상황을 누가 결정하며, (특히) 수정한 소프트웨어를 공동체로 다시 배포할 권리를 누가 갖는가를 결정하게 된다.

한 문화의 금기는 그것이 갖고 있는 규범을 확실히 보여준다. 진전된 논의에 앞서 몇 가지 중요한 금기를 요약해 보면 다음과 같다.

 1. 프로젝트 분기에 반대하는 강한 사회적 압력이 있다. 절실한 필요에 의한 요청이 있는 경우가 아니라면 프로젝트 분기는 일어나지 않으며, 분기가 일어나면 원래의 이름을 변경하고 분기의 필요성에 대한 대중적인 자기합리화가 이루어져야 한다.
 1. 기본적으로 매우 사소한 이식상의 수정 같은 특별한 경우가 아닌 한, 중재자`moderator` 의 협력 없이 수정한 것을 프로젝트에 직접 배포하는 것은 못마땅하게 생각된다.
 1. 기여자의 이름을 프로젝트 이력이나 유지관리자 목록 등의 관련 파일[^3-10]에서 삭제하는 일은, 당사자의 명시적인 동의가 없는 한 결코 이루어지지 않는다.

[^3-10]: 역자주 일반적으로 이런 용도로 사용되는 파일은 AUTHORS, CREDITS, THANKS, HISTORY, README, ChangeLog, Contributors 등의 이름을 갖는다.

이제 이러한 금기와 소유권 관습을 상세히 살펴보고 금기가 어떻게 기능하며, 이것이 오픈소스 공동체의 근본적인 사회역학과 참여 동기 구조에 어떻게 반영되고 있는가를 살펴보도록 하자.

## 소유권과 오픈소스

소유물이 무한히 복제될 수 있고 매우 융통성 있으면서, 이를 둘러싼 문화가 자원이 희소한 경제도 아니고 강압적인 권력관계도 아닐 때, 과연 소유권은 어떤 의미일까?

오픈소스 문화의 경우, 이것은 사실 답하기 쉬운 질문에 해당한다. 소프트웨어 프로젝트 소유자는 개작판`modified version`을 배포할 수 있는 배타적 권리를 갖고 있다고 공동체에 의해 일반적으로 인정받고 있는 사람이다.

(이 절에서는 소유권을 논할 때 마치 한 개인이 프로젝트를 소유하는 것처럼 단수형을 사용한다.[^3-11] 그러나 개인 아닌 집단이 프로젝트를 소유할 수 있다는 사실도 인식하고 있어야 한다. 집단이 프로젝트를 소유할 경우에 발생할 수 있는 내부 역학에 대해서는 이 글 뒷부분에서 살펴보기로 한다.)

[^3-11]: 역자주 소유자를 뜻하는 단어를 owners가 아닌 단수형 owner로 쓴 데 대한 저자의 설명이다. 한국어 문법에는 단수와 복수에 대한 명확한 구분과 형식이 없으므로 이 글은 문맥에 따라 알맞은 형태를 취했다.

표준적인 오픈소스 이용허락에 따르면 진화 게임`revolutionary game`에서 모든 참가자는 동등하다. 그러나 실제로는 대중적으로 인정된 유지관리자`maintainer`가 승인해서 기존의 소프트웨어에 통합된 공식 패치와 다른 사람이 추가한 비공식 패치 사이에 매우 분명한 차이가 존재한다. 비공식 패치는 흔치 않으며, 일반적으로 신뢰되지 않는다.[^3-12]

[^3-12]: 원주 비공식 패치에는 몇 가지 미묘한 점이 있다. 비공식 패치는 우선 우호적 패치와 비우호적 패치로 구분할 수 있다. 우호적 패치는 (통합이 실제로 이루어지든 아니든 간에) 유지관리자의 통제 아래 프로젝트의 중심 소스 기반에 통합되기 위해 만들어진다. 그러나 비우호적 패치는 유지관리자가 승인하지 않는 방향으로 프로젝트를 몰고 가기 위해 만들어진다. (특히 리눅스 커널 같은) 몇몇 프로젝트들은 우호적 패치에 무척 관대하며 베타 테스트 단계에서는 심지어 독립적인 배포를 권장하기도 한다. 그러나 비우호적 패치는 본래의 코드와 경쟁하려는 뜻을 분명히 하고 있기 때문에 심각한 문제가 된다. 많은 양의 비우호적 패치를 유지하게 되면 결국 프로젝트 분기로 이어지는 경향이 있다.

공개 재배포 여부가 패치의 경중을 가름하는 핵심이라는 것은 명백하다. 관습은 개인이 자신의 필요에 따라 소프트웨어 패치를 만드는 것을 장려한다. 관습은 제한적인 사용자나 개발자 모임 안에서 개작판을 배포하는 사람에게 신경 쓰지 않는다. 일반적으로 소유권이 문제 되는 유일한 경우는 개작판이 원래의 소프트웨어와 경쟁하기 위해 오픈소스 공동체 안으로 들어올 때다.

오픈소스 프로젝트의 소유권을 획득하는 방법은 일반적으로 3가지가 있다. 먼저, 가장 확실한 방법은 프로젝트를 창설하는 것이다. 프로젝트가 시작될 때부터 한 사람이던 유지관리자가 현재까지 활동하고 있다면 관습은 프로젝트 소유자가 누군가 라는 질문조차 허용하지 않는다.

두 번째 방법은 기존의 유지관리자로부터 소유권을 이전받는 것이다. (이것은 때때로 ‘배턴 이어받기’로 표현되기도 한다.) 오픈소스 공동체 안에서는 유지관리자가 의욕을 잃거나 개발과 유지관리에 투자할 시간이 없을 때, 유능한 후임자에게 프로젝트를 넘겨 줄 의무가 있다고 잘 이해되고 있다.

널리 알려진 중요한 프로젝트의 경우에는 이러한 통제권의 이전을 널리 알리는 것이 중요하다. 오픈소스 공동체의 다수가 소유자의 후계 선택을 실제로 방해한 경우는 없었지만, 관행은 대중적 정통성이 중요하다는 전제를 분명히 갖고 있다.

소규모 프로젝트의 경우에는 일반적으로 소유권 이전 사실을 소프트웨어와 함께 배포하는 개정 이력 파일에 포함시키는 것으로 충분하다. 만약 소유권 이전이 자발적으로 이루어진 것이 아니라면 합당한 기간 동안 반대 의사를 공동체에 공개적으로 제기함으로써 통제권을 분명히 되찾을 수 있다.

프로젝트 소유권을 얻는 세 번째 방법은, 해야 할 일은 있지만 소유자가 흥미를 잃거나 사라져 버린 프로젝트를 찾는 것이다. 만약 이 방법을 선택한다면 프로젝트 소유자를 찾아내는 것은 자신의 책임이다. 만약 소유자를 찾는데 실패한다면 (해당 애플리케이션 분야 전담 뉴스그룹 등의) 적절한 장소에 프로젝트가 버려진 것 같고 자신이 책임을 맡겠다고 알릴 수 있다.

관습은 새로운 프로젝트 소유자임을 선언하기 전에 어느 정도 유예기간을 둘 것을 요구한다. 유예기간 동안 프로젝트 작업을 실제로 계속하고 있다는 사람이 나타나면 새로운 프로젝트 소유 주장은 불식될 것이다. 프로젝트를 맡겠다는 의사는 공개적으로 여러 번 하는 것이 바람직하게 여겨진다. 또한 (관련 뉴스그룹과 메일링리스트 등의) 많은 관계 포럼에 알리고 응답을 기다리는 인내를 좀 더 보여준다면 좋은 인상과 점수를 얻을 수 있다. 일반적으로 이전 소유자나 이의를 제기할 사람이 응답할 수 있는 노력이 눈에 많이 보일수록 반응이 없는 경우보다 자신의 주장을 더욱 쉽게 관철할 수 있다.

만약 이 과정을 프로젝트 사용자 공동체 안에서 진행한다면 반대에 부딪히지 않을것이고, 결국 버려진 프로젝트의 소유권을 주장할 수 있게 돼 프로젝트 이력 파일에 이 사실을 기록하게 된다. 그러나 이것은 ‘배턴 이어받기’에 비해 덜 안전한 방법이며 사용자 공동체가 볼 때 중요한 개량판`improvements`을 만들어 내기 전까진 정당성을 완전히 인정받고 있다고 기대할 수 없다.

FSF가 생기기 전으로 거슬러 올라간 아주 오래 전부터 지난 20년간 나는 이러한 관습이 실제로 지켜지는 것을 봐왔다. 여기에는 몇 가지 매우 흥미 있는 점이 있다.  가장 흥미로운 것은 해커 대부분이 이런 사실을 명확하게 인식하지 못한 채 관습을 따르고 있다는 점이다. 실제로 이 글이 의식적이면서 상당히 완성된 형태로 명문화된 첫 번째 기록일 것이다.

또 한가지 흥미 있는 사실은 무의식적인 관습임에도 불구하고 주목할 만하게, (심지어 놀라울 정도로) 일관성이 유지된다는 점이다. 나는 글자 그대로 수백 개 오픈소스 프로젝트의 발전을 지켜봐 왔지만, 보거나 들은 심각한 관습 위반 사례는 손가락으로 꼽을 수 있을 정도로 소수에 지나지 않는다.

관습이 세월에 따라 변해도 일관된 방향으로 그렇게 된다는 점도 흥미롭다. 그 방향은 공적 책임을 더 높이고, 공지 수를 더 늘리며, 프로젝트의 역사와 기여자 명단 보전에 더 많은 주의를 기울이게 장려하는 것인데, 이것은 (무엇보다) 현 소유자의 정통성을 확립하는 방법이다.

따라서 이것은 관습이 우연히 생겨난 것이 아니라 오픈소스 문화가 유지되기 위해 근본적으로 필요한 생성 양식이나 암시적 목표와 같은 것에 의해 만들어진 산물이라는 것을 의미한다.

이 글의 발표 후 초기에 받은 의견 중에 인터넷 해커 문화를 (게임 크랙과 해적 BBS를 중심으로 한 ‘와레즈 듀드스’의) 크래커/해적 문화와 비교해 보면, 둘 사이의 생성 양식 차이를 보다 명확히 알 수 있다는 것이 있었다. 이에 대해서는 나중에 다시 살펴보기로 한다.[^3-13]

[^3-13]: 역자주 와레즈 듀드스(warez d00dz)는 해적 BBS를 중심으로 활동하는 크래커 집단을 가리키는 말로 (soft)wares dudes를 발음대로 표기한 것이다. 이 집단은 정품 게임 소프트웨어의 출시 당일에 크래킹 판을 유포하는 것으로 특히 유명하다. 이들은 단어를 쓸 때 p와 f를 서로 바꿔 쓰거나 s 대신 z를 쓰고, 알파벳o를 숫자 0으로 쓰는 등 의도적으로 철자를 틀리게 사용하는 습성이 있다.

## 로크와 토지 소유권

해커 관습의 생성 양식을 이해하기 위해서는, 해커들의 일반적인 관심 영역은 아니지만 역사적으로 이와 유사한 예를 살펴보는 것이 도움이 된다. 법사학과 정치철학을 공부한 사람이라면 이전 절에서 설명한 오픈소스 프로젝트 소유권이 함축하고 있는 것이 영미 보통법의 토지 소유권 이론과 사실상 동일하다는 점을 알 수 있을 것이다.

이 이론에 의하면 세 가지 방법으로 토지 소유권을 가질 수 있다.

(19세기 미국 서부 개척지의 변경 같은) 미개척지에는 소유자 없는 땅이 존재하는데, 이런 땅을 스스로 개간하여 자신의 노동을 혼합하고 그 영역에 울타리를 쳐 지키는 방법으로 소유권을 취득할 수 있다.[^3-14]

[^3-14]: 역자주 에이브러햄 링컨(Abraham Lincoln, 1809∼1865) 대통령에 의해 1862년부터 실행된 자영농지법(Homesteading Act)은 미개척지의 한 장소에 5년간 거주하면 160에이커(약 64만 7천 제곱미터, 약 19만 6천 평)의 땅을 무상으로 주는 것이 주된 내용이다. 이 글의 제목 ‘얼누리의 개간’은 바로 이런 관점에서 사용된 것으로, 인터넷을 중요 의사소통 수단으로 삼는 지식영역 ‘얼누리’를 개간해서(homesteading) 그 소유권을 취득한다는 의미다. 자영농지법은 1976년에 폐지됐는데, 이와 유사한 예로 한국의 민법은 다음과 같은 점유취득시효 조항을 두고 있다. 「민법 제245조 (점유로 인한 부동산 소유권의 취득 기간) ① 20년간 소유의 의사로 평온, 공연하게 부동산을 점유하는 자는 등기함으로써 그 소유권을 취득한다.」

정착 지역에서의 일반적인 소유권 이전 방법은 기존의 소유자에게 양도증서를 받는 것이다. 여기에는 ‘소유권 연쇄’의 개념이 중요하다. 소유권의 이상적인 증명은 양도증서를 통해 토지가 최초로 개간된 때부터 소유권이 연쇄적으로 승계된 사실을 보이는 것이다.

결국 보통법 이론은 (예를 들어, 소유자가 상속인 없이 죽거나 주인 없는 토지에 대한 소유권 연쇄를 증명할 기록이 사라진 경우에는) 토지 소유권이 없어지거나 포기될 수 있음을 인정한다. 따라서 이런 형태로 버려진 토지는 불법점유로 다시 소유권을 주장할 수 있다. 즉 마치 최초의 개간인 것처럼 그 땅에 들어가 가꾸며 소유권을 지키는 것이다.

이 이론은 해커 문화의 관습처럼 중앙의 권위가 약해지거나 존재하지 않는 환경에서 조직적으로 발전되었다. 이것은 북유럽과 게르만 부족법에서 천 년 이상 발전돼 온 것이다. 이것을 근대에 이르러 체계적으로 정리하고 합리화시킨 사람이 영국의 정치철학자 존 로크`John Locke, 1632∼1704`였기 때문에 때때로 이 이론을 가리켜 ‘로크의 소유권 이론’이라고 한다.

소유권이 높은 경제가치와 생존가치를 가지면서, 희소한 재화를 중앙에서 분배하기에 충분한 강제력 있는 단일 권력이 존재하지 않는 곳에서는 논리적으로 유사한 이론이 생겨나는 경향이 있다. 이것은 때때로 소유의 개념이 존재하지 않는다고 낭만적으로 생각되는 수렵·채집 문화에서도 성립한다. 예를 들어 칼라가디`예전의 칼라하리` 사막의 !쿵산 부시먼족의 전통에서는 사냥터에 대한 소유권은 존재하지 않지만, 로크 이론과 유사한 것으로 판단할 수 있는 이론에 따른 물웅덩이와 샘에 대한 소유권은 존재한다.[^3-15]

[^3-15]: 역자주 칼라하리 사막(Kalahari Desert)은 보츠와나(Botswana)와 남아프리카공화국(Republic of South Africa), 나미비아(Namibia) 등 남아프리카 여러 나라에 걸쳐 있는 광범위한 지역이다. 칼라하리 사막 지역 안에 보츠와나와 남아프리카공화국 소유의 2개 국립공원이 있었는데, 이 공원들을 하나로 합쳐 공동관리하면서 1999년 보츠와나 행정 명칭에 맞춰 칼라가디 초국경 공원(Kgalagadi Transfrontier Park)이 돼 ‘칼라가디’란 명칭이 널리 알려졌다. 칼라하리가 칼라가디에서 유래한 영어식 표기이기는 하지만 세계적으로 널리 사용되고 있고, 지명으로서도 칼라하리 사막은 칼라가디 초국경 공원 일대를 포함한 보다 넓은 지역을 가리키기 때문에 본문의 언급과 달리 칼라하리와 칼라가디는 별개로 의미로 사용되는 이름이다. 칼라가디는 목마름의 땅(Land of Thirst)이란 뜻이며 원어 발음은 ‘칼라카디’와 ‘할라하디’의 중간음에 가깝다. 이 글에서는 외래어표기법을 부분적으로 적용한 칼라가디로 표기한다. [!쿵 산 부시먼(!Kung Sang Bushmen)](https://web.archive.org/web/19990117024106/http:/www.lawrence.edu/dept/anthropology/kungsan/KUNGSAN.HTML)은 영화 부시먼(The Gods Must be Crazy, 1984)과 관절염 치료제 ‘악마의 발톱(Harpagophytum)’으로 한국에도 잘 알려져 있는데 !쿵 앞에 붙은 느낌표는 혀 차는 소리(click consonant)의 하나인 치경흡착음을 표시하기 위한 [국제음성기호](http://www.langsci.ucl.ac.uk/ipa/nonpulmonic.html)다. 발음할 때 혀끝이 앞 윗니 뒤쪽 잇몸을 (혀로 입천장을 차듯) 차고 ‘쿵’하고 발음한다. !쿵은 ‘진정한 사람’이란 뜻이며 !쿵 산 부시먼족은 표준국어대사전에 어족상 구분인 코이산족(Khoisan)으로 올려져 있다.

!쿵산 부족의 예는 시사하는 바가 크다. 왜냐하면 이것은 특정한 자원을 지키는데 소요되는 비용보다 그 자원으로부터 돌아올 효용이 더 클 때에만 로크의 소유권 관습이 만들어지고 있음을 보여주기 때문이다. 사냥으로 얻을 수 있는 것은 매우 가변적이고 예측 불가능하기 때문에 사냥터는 (매우 높게 평가될 수 있기는 하지만) 매일 매일의 생존을 위한 필수품이 되지 못한다. 그러나 물웅덩이는 생존하는 데 필수적이면서 충분히 지킬 수 있는 작은 영역이다.

이 글의 제목에 사용된 ‘얼누리`noosphere`’는 가능한 모든 사고의 공간인 관념의 영토다.[^3-16]  [^3-17] 해커 소유권 관습이 함축하는 것은 얼누리의 한 영역으로서의 모든 프로그램 공간에 대한 로크의 소유권 이론이다. 따라서 ‘얼누리를 개간하는`homesteading noosphere`’것은 새로운 오픈소스 프로젝트를 창설한 모든 사람이 하는 행위다.

[^3-16]: 원주 ‘noosphere’는 철학에서도 모호한 용어다. 이것은 (두 개의 o 발음 중 앞에 있는 것은 강세를 주어 길게, 뒤에 있는 것은 강세를 주지 않고 짧게 해서 슈와(schwa)가 되도록) ‘노우-어-스피어(KNOW-uhsfeer)’라고 발음한다. 철자법에 매우 철저한 사람이라면, 별개의 모음임을 나타내기 위해 두 번째 o자 위에 분음 부호(diaeresis)를 표시해 쓸 수 있다. 좀 더 자세히 설명하면 이 용어는 인간의 사고 영역을 의미하며 마음, 정신 또는 생명을 뜻하는 그리스어 ‘nous’에서 유래했다. 이 용어는 E. 르 루아(Le Roy, 1870∼1954)가 쓴 『인간 기원과 지성의 진화(Les Origines Humaines et l'Evolution de l'lntelligence, Paris, 1928)』에서 만들어졌다. 그 후 러시아의 생물학자이자 선구적 생태학자인 블라디미르 이바노비치 베르나츠키(Vladimir Ivanovich Vernadsky, 1863∼1945)에 의해 처음 대중화된 후에 철학자이자 고생물학자인 예수회 신부 테야르 드 샤르댕(Teilhard de Chardin, 1881∼1955)에 의해 이어졌다. 지금은 주로 샤르댕의 미래 인간 진화 이론에서 인간이 삼위일체 하나님과 함께 순수한 정신체로 연합하여 성화한다는 의미로 사용되고 있다.

[^3-17]: 역자주 Noosphere의 한국어 번역과 관련해서, 샤르댕의 책 『인간 현상(Le Phenomene Humain)』은 1971년과 1997년에 삼성출판사와 한길사가 각각 번역·출판했는데 1971년 번역판(이효상 옮김)은 noosphere를 ‘정신계’로, 1997년 번역판(양명수 옮김)은 ‘얼누리’로 옮겼다. 또한 2003년에 출판된 피에르 레비(Pierre Levy)의 『누스페어, 김동윤 외 옮김, 생각의나무, 2003년, ISBN: 9788984982680』은 프랑스어 noosphere를 발음 그대로 ‘누스페어’로 옮기면서 집단지성(intelligence collective)을 중심으로 하는 상호작용과 지식 영역의 확장 공간으로서의 개념으로 소개하고 있다. 에릭 레이먼드의 글을 번역한 이 글은 개간을 통해 권리를 인정받는 지식권역으로서의 의미에 초점을 맞추고 (대기권, 성층권, 생명권 등의 표현이나) 뒤에 나오는 작업권 등의 용어와 형태를 맞추기 위해 2000년 번역에서 noosphere를 ‘인지권(人智圈)’으로 옮겼지만, 이제 ‘얼누리’로 바꾼다. Noosphere에 대해 널리 통용되는 번역어가 없는 상태에서 한국어 얼누리가 가진 의미와 깊이가 가장 좋다고 판단되기 때문이다. 1997년 번역판 『인간 현상』에 나오는 얼누리에 대한 설명은 다음과 같다. 「얼은 정신을 가리키는 우리말이다. 우리말 얼은 한자말 정신이 지니지 못하는 장점을 지니고 있다. 서양에 물질보다 높은 존재를 가리킬 때 누우스(nous)와 프시케(psyche)라는 말이 있다. 이 둘을 그냥 정신이라고 쓸 수도 있으나 때로는 사람에게 들어 있는 것을 구분해서 쓸 때 누우스는 사람에게만 있는 것이 된다. 그러한 구분을 지을 때 누우스는 ‘얼’이요 프시케는 ‘넋’이라고 하면 좋다. 우리말에서도 얼과 넋은 어느 정도 구분해서 쓰는 것 같다. 그러나 이 책에서 우리는 무기물을 포함하여 사람에 이르기까지 공통으로 있는 넋(사람은 얼과 넋을 함께 지녔다)을 가리켜서도 그냥 얼이라는 말을 썼다. 그것은 샤르댕이 생명 역사 전체를 꿰뚫어 하나로 설명할 때 ‘얼의 투쟁사’라고 하기 때문이다. 그래서 존재의 밖을 이루는 물질에 짝하는 개념으로 얼과 넋을 통합하여 얼이라는 말로 썼다. 그러므로 이 책에서 사물이나 동식물의 얼이라고 할 때는 사람의 얼과 연장선에 있으면서도 구분되는 넋을 연상하면 된다.(43페이지) 정신계(noosphere)를 가리키는 우리말을 ‘얼누리’라고 한다. 사람 이전의 생물에도 얼이 있었다. 무생물에도 얼, 곧 내면이 있다는 것이 샤르댕의 사상이다. 그러나 사람 이전에는 얼누리가 없었다. 얼이 세계를 이루지는 못했다는 말이다. 이처럼 사람 이전에도 얼이 이었지만, 사람에 이르러서야 얼이 서로 만나 이룩되는 얼누리가 생겼음을 말하기 위해서 사람 이전과 이후에 모두 얼이라는 말을 쓰는 것이 좋다. 그래서 우리는 모든 존재에 얼이라는 말을 썼다. 그런데 사실 사람의 얼과 그 이전 단계의 얼은 구분되어야 한다. 공통으로 쓸 수 있는 말은 프시케다. 샤르댕의 말은 돌에도 프시케가 있다는 얘기다. 그런데 서양 철학에서 프시케라는 말보다 한 단계 높여서 쓰는 말이 누우스다. 그렇다면 사람에게 있는 얼은 누우스요 그 이전 단계에 있는 얼은 프시케라고 할 수도 있다. 실제로 샤르댕은 사람의 얼을 가리킬 때 프시케와 함께 ‘spirit’를 쓰기도 한다. 성경에서는 ‘퓨뉴마’와 ‘프시코스’를 구분하며 이것을 우리나라에서는 흔히 ‘영’과 ‘혼’으로 번역해 쓴다. 누우스와 프시케의 구별이 우리말로는 뚜렷하지 않으나 누우스를 얼로 프시케를 넋으로 볼 수 있지 않을까 한다. 프시케, 혼, 넋은 숨이나 의식이 붙어 있도록 하는 무엇을 가리킨다. 물(物), 몸뚱이(肉) 위에 있지만 물과 몸뚱이에 상관하면서 그 존재를 지탱하는 힘이다. 누우스, 푸뉴마, 영, 얼은 물과 육을 넘어 자유를 향한 순수한 정신 차원을 가리킨다. 프시케는 밑과 관계하지만 누우스는 위와 관계한다. 그래서 ‘모든 존재에 얼이 있다’는 말을 좀더 자세히 밝히면, 무생물과 동식물에는 넋이 있고 사람에게는 넋뿐 아니라 얼이 있다고 할 수도 있으리라. 얼누리라는 말은 그처럼 앞 단계의 넋과 구분하는 뜻으로 이해해도 된다.(174페이지)」샤르댕에 대한 이 책의 설명을 추가로 인용하면 다음과 같다. 「1881년 프랑스 오베르뉴(Auvergne)에서 태어난 샤르댕은 예수회에 입단하면서 철학과 신학을 공부했고 1911년 예수회 사제로 서품되었다. 이즈음 과학자들과 어울려 화석을 연구하면서 지질학과 생물학에 관심을 가졌는데 특히 파리 국립역사박물관에서 고생물학자 피에르 마르셀랭 불(Pierre Marcellin Boule, 1861∼1942)의 지도를 받은 것이 결정적인 계기가 되어 파리 가톨릭 대학 지질학과 교수가 되었다. 이후 고고학 자료를 얻기 위해 몽골, 중국, 북인도 등을 여행했으며 1928년 샤르댕의 제자들로 구성된 중국인 발굴대가 북경 원인의 유골을 발굴하는 성과를 거뒀다. 1939년 제2차 세계대전이 발발하면서 북경에 구금되는데 이 기간동안 대표작 『인간 현상』을 집필한다. 지질학, 생물학, 인류학 등에 근거해 진화론을 받아들인 그의 신학은 프랑스 교계에 물의를 일으켰다. 이와 관련해서 『인간 현상』이 로마 교황청 서적 검열에 걸리고 70세의 나이에 교회에서 추방되어 파리를 떠나 미국 뉴욕으로 망명해 1955년 세상을 떠날 때까지 그곳에서 지냈다.」

파레 리도`Fare Rideau, fare@tunes.org`는 해커들이 순수한 관념의 영역에서 활동하는 것은 아니라는 정확한 지적을 한다. 그는 해커들이 소유하고 있는 것은 (개발이나 서비스 등의) 육체 노동이 내포돼 있는 프로그래밍 프로젝트며, 여기에 명성이나 신용 등이 결부돼 있다고 주장한다. 따라서 해커 프로젝트가 걸쳐 있는 공간은 순수한 얼누리가 아닌 얼누리를 탐사하는 이원적 형태의 프로그램 프로젝트 공간이라는 것이다. (천체물리학자들의 양해를 빌면, 이러한 이원적 공간을 어원적으로 ‘일누리`ergosphere`’ 또는 ‘작업권`sphere of work`’이라 부르면 합당할 것이다.[^3-18])

[^3-18]: 역자주 작업권(作業圈)으로 옮긴 에르고스피어(ergosphere)는 작업 공간 또는 일의 공간을 뜻하는 표현이다. 천체물리학에서 블랙홀을 싸고 있는 가상의 띠를 작용권(作用圈)이란 용어로 사용하고 있기 때문에 천체물리학자의 양해를 빈다는 말이 언급되었다.

실제로 얼누리와 작업권의 차이는 이 글에서 그리 중요하지 않다. 파레가 주장한 순수한 의미에서의 ‘얼누리’가 의미 있는 형태로 존재하는지 여부는 미심쩍은 부분이 있다. 그것을 믿기 위해서는 아마도 플라톤주의자가 돼야 할 것이다.[^3-19] 얼누리와 작업권의 구별이 실제로 중요한 유일한 경우는 (얼누리의 요소인) 아이디어와 관념이 소유될 수 없고 그것을 구체화한 프로젝트만이 소유될 수 있다고 주장하고 싶을 때다. 이 문제는 지식재산`intellectual property` 이론으로 연결되지만, 이 글의 범위를 벗어나기 때문에 생략하기로 한다.[^3-20]

[^3-19]: 역자주 플라톤의 철학은 이데아를 근거로 한 이원적인 세계관을 중심으로 한다. 이원론은 기독교가 세계를 영원불변한 내세와 불완전하고 임시적인 현세로 구분하듯이 모든 특수한 것에는 현실에서 보이는 현상과 그것의 궁극점인 이데아가 있다고 규정하는 것이다. 따라서 현세에 사는 개개인의 존재는 보편적인 사람의 결정체인 ‘사람의 이데아’가 구체화된 것이며, 같은 논리에 따라 이 세계에 있는 모든 컴퓨터에는 눈에 보이지 않는 컴퓨터의 궁극적 실체인 ‘컴퓨터의 이데아’와 그것이 눈에 보이게 나타난 컴퓨터의 모습이 이원적으로 존재하는 것이다. 이런 관점에서 보면 파레의 주장은 순수한 얼누리, 즉 얼누리의 이데아는 따로 존재하는 것이며 해커들이 작업하는 공간은 ‘얼누리의 이데아’가 현실에서 구체화된 프로그램 프로젝트라는 것이다.  영원과 육체라는 간단한 이원론에서 유추할 수 있는 것처럼 이원론적인 세계관에는 상호 연결에 대한 논리적 모순이 존재하며 레이먼드는 파레의 주장에 대해 이러한 부분을 비판하고 있다.

[^3-20]: 원주 현대 경제학에서 가장 명쾌하고 이해하기 쉬운 사상가 중 한 명인 데이비드 프리드먼(David Friedman)은 지식재산권법의 역사와 논리에 대한 탁월한 개설을 썼다. 이 주제에 관심이 있는 사람에게 이 글을 [출발점으로 추천](https://web.archive.org/web/20001208204100/http:/www.best.com/~ddfr/Academic/Course_Pages/L_and_E_LS_98/Why_Is_Law/Why_Is_Law_Chapter_11.html)하고 싶다.

그러나 때때로 사이버스페이스`cyberspace`로 불리는, (해커들이 대부분 혐오하는[^3-21]) 전자 매체 안에 위치한 가상공간 전체는 얼누리나 작업권과 같은 것이 아니라는 점을 짚고 넘어가는 것이 혼란을 피하기 위해 중요할 것 같다. 사이버스페이스의 소유권은 전혀 다른 규칙에 따라 통제되는데, 이것은 물질세계의 규칙과 비슷한 형태를 띤다. 즉 기본적으로 사이버스페이스의 일부가 놓여 있는 매체와 기계를 소유한 사람이 결과적으로 그 사이버스페이스 부분을 소유하는 것이다.

[^3-21]: 역자주 여기서 ‘해커가 혐오한다’는 것은 흔히 사이버펑크(cyberpunk)로 연결되는 혼잡하고 과격한 크래 커/해적 문화와 소유와 통제에 따른 사이버스페이스의 디스토피아(dystopia)적 현상을 해커들이 대부분 싫어한다는 의미다.

로크 이론의 논리는 자신이 쏟은 노력으로부터 돌아올 기대 수익 같은 것을 지키기 위해 오픈소스 해커들이 관습을 지키게 됨을 강하게 시사한다. 기대 수익은 프로젝트를 개간하는데 들어간 노력과 ‘소유권 연쇄’ 증명인 프로젝트 이력의 유지관리 비용, 그리고 버려진 프로젝트를 찾아 불법점유하기 전까지 공개적으로 알리고 기다린 시간 비용보다 훨씬 큰 것임이 틀림없다.

더욱이 오픈소스에서 얻을 ‘수익’은 단순히 소프트웨어가 널리 사용되는 것과 그로 인한 만족감 이상의 것이고 프로젝트 분기로 손상되거나 줄어드는 것임이 틀림없다. 만약 소프트웨어의 사용이 유일한 쟁점이라면 프로젝트 분기를 막는 금기도 없을 것이고, 오픈소스의 소유권이 토지 소유권과 유사한 형태를 띠지도 않을 것이다. 사실 (소프트웨어의 사용이 유일한 수익이고 프로젝트 분기가 전혀 문제 되지 않는) 그런 대안적 세계는 현재의 오픈소스 이용허락에 의해 암시되는 것일 뿐이다.

몇 종류의 수익 후보는 언제든 없앨 수 있다. 먼저 그 누구도 네트워크 연결을 효과적으로 강제할 수 없기 때문에 권력 추구는 바로 제외시킬 수 있다. 또한 오픈소스 문화 안에는 돈 같은 것이나 내부 희소 경제가 존재하지 않기 때문에 해커들은 (희소한 화폐를 축적하는 등의) 물질적인 부와 밀접한 그 어떤 것도 추구할 수 없다.

그러나 오픈소스 활동을 통해 보다 윤택해 질 수 있는 방법이 하나 있다. 그것은 오픈소스 활동이 유용한 정보로 작용하는 것이다. 종종 해커 문화에서 얻은 명성이 현실 세계로 이어져 보다 좋은 취업 기회와 자문 계약 또는 책 저술 등의 경제적으로 의미 있는 수단과 연결될 수 있다.[^3-22]

[^3-22]: 역자주 이와 관련된 한가지 분석을 인용하면 다음과 같다. 「러너(Lerner)와 티롤(Tirole)에 의하면, 오프소스 소프트웨어의 개발에 있어 훌륭한 업적을 올린 사람들에게 당장은 금전적 보장이 주어지지 않지만, 시간이 가면서 좋은 직장을 구할 수 있는 확률이 높아지는 등의 이익이 있다고 한다. 그러나 ‘그런 목적이라면 왜 같은 노력을 사유 소프트웨어의 개발에 쏟아 붓지 않는가?’라는 의문이 제기될 수 있다. 사유 소프트웨어 개발에 성공하면 금전적 이익도 생기고 취업 기회 역시 늘어날 수 있기 때문이다. 그럼에도 불구하고 사용자들이 오픈소스 개발에 참가하는 이유를 이해하려면 신호 이론(Signaling Theory)을 이해해야 한다. 자신에게 뛰어난 능력이 있음을 증명하기 위해서, 비록 그 자체로서는 이익이 되지 못함에도 불구하고 능력 없는 사람은 할 수 없는 일을 하게 된다는 이론이 신호 이론이다. (중략) 그렇다면 상업용 소프트웨어 기업에서도 어떤 개발자가 어떤 부분을 개발했는지를 공표함으로써 개발자들의 시그널링 인센티브를 이용하여 개발 노력을 더욱 고취시킬 수 있을 것이다. 그러나 현실적으로 대다수의 사유 소프트웨어 개발 업체들이 개발자의 이름을 공개하지 않는 것은 유능한 사람이라고 알려질 경우 경쟁업체에 의해 쉽게 스카우트 당할 가능성이 높아지기 때문이라고 한다. 따라서 프로그래머들에게 있어 오픈소스 개발에의 참여는 자신의 능력을 동 업계에 보여줄 좋은 기회인 셈이다.(『오픈소스 소프트웨어의 경제학, 김정호, 이완재, 자유기업원, 2004년, ISBN: 9788984291003』, 30페이지)」

그러나 이런 종류의 부수적 기회는 대부분의 해커에게 매우 적고 드문 일이다. 따라서 돈이 아닌 사랑과 이상을 위해 활동한다는 해커들의 반복된 주장을 무시한다고 해도, 이것이 오픈소스 활동을 설명하는 유일한 이유가 되기는 힘들다. 그러나 이러한 종류의 경제적 부작용이 생겨나는 방법을 검토해 보는 것은 가치 있는 일이다.

이제 오픈소스 문화 안에서 작용하는 명성의 역할이 상당한 설명력을 갖고 있음을 논의해 보자.

## 증여경제로서의 해커 문화

오픈소스 문화 안에서의 명성의 역할을 이해하기 위해서는 역사보다 인류학과 경제학의 측면에서 교환문화와 증여문화의 차이점을 살펴보는 것이 도움이 된다.

인간은 사회적 지위를 위해 경쟁하는 본능적인 욕구가 있다. 이것은 진화의 역사에서 지속돼 온 사실이다. 농업이 발명되기 전 인류의 역사 90%에서 우리 선조들은 작은 수렵·채집 유목 집단을 이루며 살아왔다. 높은 지위를 가진 사람은 (자신에게 협조하거나 동맹을 맺도록 상대방을 설득하는 매우 효과적인 힘을 갖고 있었고) 가장 건강한 배우자와 좋은 음식을 가질 수 있었다. 지위에 대한 추구는 생존에 필요한 재화의 희소성과 밀접하게 연관돼 다양한 방식으로 나타난다.

인간이 무언가를 조직하는 방식은 대부분 필요와 결핍에 대한 적응이다. 각각의 방식들은 사회적 지위를 획득하기 위한 다른 방법을 갖고 있다.

가장 간단한 방식은 명령체계다. 명령체계에서는 무력으로 뒷받침되는 단일 중앙 권력에 의해 희소 재화의 분배가 이루어진다. 명령체계는 확장이 매우 어려워서 조직이 커질수록 잔혹성과 비효율성이 커진다.[^3-23] 이러한 이유 때문에 명령체계가 대가족 이상으로 확장될 경우에는 더 큰 다른 형태의 경제에 기생할 수밖에 없게 된다. 명령체계에서 사회적 지위는 강제력을 행사할 수 있느냐에 따라 결정된다.

[^3-23]: 원주 디스코어디아교(Discordianism)의 성경 『Principia Discordia or How I Found Goddess and What I Did To Her When I Found Her, Malaclypse the Younger, Loompanics, ISBN: 1559500409』에서 깨달음을 주는 많은 어리석음을 발견할 수 있는데, 그 중 스나프(SNAFU) 원리는 왜 명령체계가 잘 확장될 수 없는가에 대한 예리한 분석을 담고 있다. 이 책은 [HTML](http://www.cs.cmu.edu/~tilt/principia/) 문서로도 참고할 수 있다.(역자주 디스코어 디아교는 혼동과 싸움의 여신 에리스(Eris)를 숭배하는 미국의 신흥종교 사상이다. 에리스는 그리스에서 로마 시대로 넘어가면서 디스코어디아(Discordia)로 불려졌다. 디스코어디아교의 강령 중 하나인 스나프에는 양쪽 모두가 동등한 관계일 때만 진정한 의사소통이 가능하다는 의미가 있다. 왜냐하면 권력이나 명령체계에서는 지속적인 보상을 받거나 형벌을 피하기 위해 약자가 강자에게 거짓과 감언이설로 현실을 왜곡시키기 때문이다. 이런 이유 때문에 스나프는 권위주의 조직이 체계적이고 신뢰성 있게 유지될 수 있는 이유를 설명할 때 인용되곤 한다. 스나프는 원래 2차 세계대전 당시 미 육군에서 유래한 속어 ‘Situation Normal, All Fucked Up!(겉으로는 멀쩡해 보이지만 실제로는 엉망)’이라는 의미다.)

우리가 살고 있는 사회는 교환경제가 지배적이다. 교환경제는 희소성에 대한 정교한 적응 방식이며 명령체계와 달리 확장이 수월하다. 희소 재화의 분배는 교역과 자발적인 협력을 통해 분권화된 방식으로 이루어진다. (사실, 교환경제의 경쟁 욕구가 가져오는 최대의 결과는 협력적 행동이다.) 교환경제에서 사회적 지위는 (반드시 유체물일 필요는 없지만) 대부분 사용하거나 교역할 수 있는 물건에 대한 통제력을 갖고 있느냐에 따라 결정된다.

사람들은 대부분 명령체계와 교환경제 두 가지 모두에 대해 내재적인 인식 모형을 갖고 있으며, 이들이 어떻게 상호작용하는지도 알고 있다. (예를 들어) 정부와 군대, 조직범죄 집단은 우리가 ‘자유 시장’이라고 부르는 폭넓은 교환경제에 기생하는 명령체계다. 그러나 인류학자 외에는 일반적으로 인식하지 않고 있는 전혀 다른 또 하나의 모델이 있다. 그것은 증여문화`gift culture`다.

증여문화는 희소가 아닌 과잉에 대한 적응 방식이며, 생존에 필요한 재화의 물자 부족 문제가 별로 없는 사회에서 나타난다. 증여문화는 주로 온화한 기후와 풍부한 음식물이 있는 생태 지역 원주민 문화에서 찾아볼 수 있는데, 우리 사회에서도 흥행 산업이나 매우 부유한 계층 등의 특정 집단에서 볼 수 있다.

물자가 풍부해지면 명령 관계가 지속되기 힘들고, 교환 관계는 거의 무의미한 것으로 전락해 버린다. 증여문화에서는 무언가를 통제하는 것이 아닌 공짜로 주는 것에 의해 사회적 지위가 결정된다.

이런 이유로 콰키우틀`Kwakiutl` 부족 추장은 포틀래치`potlach` 연회를 연다.[^3-24] 억만장자들은 공개적으로 자선 활동을 하고 해커들은 오랜 시간을 투자해 고품질의 오픈소스 코드를 만든다.

[^3-24]: 역자주 포틀래치(Potlach)는 마스셀 모스(Marcel Mauss, 1872∼1950)의 『증여론(Essai sur le don)』을 통해 널리 알려진 아메리카 인디언의 관습으로 원래 ‘식사를 제공하다’ 또는 ‘소비하다’라는 뜻을 가진 치누크(chinook)어다. 밴쿠버 섬 원주민 콰키우틀(Kwakiutl) 부족은 포틀래치라는 연회를 통해 자신의 사회적 신분을 과시한다. 포틀래치의 특징은 가능한 많은 양의 음식과 재물을 연회에 참석한 사람들에게 무료로 제공함으로써 추장의 신분과 우월함을 과장되게 주장하는 것인데, 참석자들이 주체하지 못할 정도로 많은 음식을 마련하고 자기 부족의 경제적 토대가 흔들리더라도 상대 부족보다 많은 양의 선물을 선사했을 때 비로소 성공적인 축제로 평가받는다. 포틀래치에 참석한 다른 부족의 추장은 자신이 보다 우월하다는 것을 내세우기 위해 답례 포틀래치를 열어 더 많은 음식과 재물을 준비해 선물하고 심지어 집을 불태우는 일탈로 자기를 과시한다. 포틀래치에 대한 보다 자세한 내용은 『증여론, 마르셀 모스, 이상률 옮김, 한길사, 2002년, ISBN: 9788935650071』을 통해 참고할 수 있으며 『문화의 수수께끼, 마빈 해리스, 박종렬 옮김, 한길사, 1995년, ISBN: 9788935600168』에서도 관련 설명을 참고할 수 있다. 포틀래치와 같은 또 다른 증여 교환으로 서태평양 트로브리안드 군도(Trobriand Islands) 원주민의 쿨라(Kula)가 있다. 쿨라에 대해서는 『서태평양의 항해자들, 브로니스라브 말리노브스키, 최협 옮김, 전남대학교출판부, 2013년, ISBN: 9788997620913』을 통해 상세한 내용을 참고할 수 있다. 쿨라의 본질 중 다음 해석은 오픈소스 문화, 특히 이용허락의 유효성과 연관해 생각해 볼 만하다. 「한번 쿨라에 들어가면 계속 쿨라에 속한다. (중략) 그러므로 쿨라는 지리적인 넓이의 측면에서, 또는 그 구성 요소의 다양성이라는 측면에서 극도로 거대하고 복잡한 제도인 것이다. 쿨라를 통해 수많은 부족들이 함께 엮여지며, 다양한 활동들이 하나의 복합체를 이룬다. 그리고 쿨라는 그러한 수많은 부족들과 다양한 활동들을 서로 연결시키고 상호 관여하도록 작용하여 결국 하나의 유기적 전체를 만들 어낸다.(135페이지)」

이런 측면에서 살펴보면 오픈소스 해커 사회는 결국 증여문화라는 사실이 명백해진다. 그 안에는 생존 필수품이라 할 만한 디스크 공간과 네트워크 대역폭, 컴퓨팅 파워 등의 심각한 부족이 존재하지 않는다. 소프트웨어는 자유롭게 공유된다. 이러한 풍족함 아래에서는 경쟁에서의 성공을 알 수 있는 유일한 척도가 동료들 사이의 명성이다.

그러나 이러한 사실 자체가 해커 문화에서 보이는 측면들을 모두 충분히 설명하지는 못한다. 크래커와 와레즈 듀드스는 해커 문화와 마찬가지로 동일한 (전자) 매체를 근거로 성장한 증여문화지만 그들의 행동 방식은 전혀 다르다. 그들 문화의 집단 사고방식은 해커 문화에서보다 훨씬 강하고 배타적이다. 그들은 비밀을 공유하기보다 감춘다. 크래커 집단에서는 크랙 방법을 공개하는 것보다 크랙된 실행 파일을 소스 코드 없이 배포하는 경우가 우세하다.[^3-25]

[^3-25]: 원주 해커 문화와 크래커 해적 문화를 비교해 보는 것이 얼마나 유익한지 알려준 마이클 펑크(Michael Funk, mwfunk@uncc.campus.mci.net)에게 감사하고 싶다. 리누스 발레이(Linus Walleij)는 와레즈 듀드스 문화를 희소 문화로 설명하면서 나와 다른 관점에서 그들의 [문화 역학을 분석한 글](http://www.df.lth.se/~triad/papers/Raymond_D00dz.html)을 써주었다. 그러나 이러한 대비는 오래가지 않을지도 모른다. 한때 크래커였던 안드레이 브란트(Andreij Brandt, andy@pilgrim.cs.net.pl)는 크래커와 와레즈 듀드스 문화의 지도자와 우수한 인재들이 오픈소스 문화에 동화돼 가면서 이제 그 문화가 시들어 가고 있음을 믿는다고 밝힌 바 있다. 이런 견해에 대한 독립적인 증거는 ‘죽은 황소 숭배(Cult of the Dead Cow)’로 불리는 크래커 집단이 1999년 7월 ‘[백오리피스 2000](https://web.archive.org/web/19991012153327/http:/bo2k.com/)’이라는 MS 윈도우 보안 파괴 프로그램을 GPL로 공개한 전례 없는 행동으로 뒷받침될 수 있다.

충분하지는 않지만 이러한 예는 증여문화가 한가지 이상의 방식으로 유지될 수 있음을 보여준다. 역사와 가치가 중요하다. 해커 문화의 역사에 대해 내가 정리한 또 하나의 글[^3-26]이 있는데, 지금과 같은 형태로 해커 문화가 형성된 데는 나름의 이유가 있다. 해커들은 자신이 참여할 경쟁 형식을 선택하는 방법을 통해 그들의 문화를 만들어 왔다. 이에 대해서는 이 글의 남은 부분을 통해 살펴볼 것이다.

[^3-26]: 원주 내가 쓴 「[해커 문화의 짧은 역사](http://korea.gnu.org/people/chsong/cb/hacker-history/)」는 해커 문화의 역사를 간략히 정리한 글이다. 훗날 다른 사람에 의해 더 잘 설명된 좋은 글이 쓰여지리라 희망한다.

## 해킹의 즐거움

해커 문화를 명성을 위해 경쟁하는 ‘명성 게임`reputation game`’으로 분석한다고 해서 우아한 소프트웨어를 설계하고 그것을 동작하게 만드는 데서 오는 순수한 예술적 만족의 가치를 낮게 보거나 무시하는 것은 아니다. 해커들은 모두 이런 종류의 만족감을 경험하며 또한 그 위에서 성장한다. 음악을 사랑하지 않는 사람이 작곡가가 될 수 없는 것처럼 무엇보다 의미 있는 동기가 없는 사람은 결코 해커가 될 수 없다.

그래서 훌륭한 기술의 정수를 추구하는 장인정신`craftsmanship`이 주는 순수한 즐거움이 가장 큰 동기가 되는 또 하나의 모델을 해커 행동 양식 분석에 포함시켜야 한다. 장인정신 모델은 해커 문화의 관습을 장인성을 발휘할 수 있는 기회와 그 결과물의 품질 모두를 극대화하는 방식으로 설명할 수 있어야 한다. 장인정신 모델은 명성 게임 모델과 충돌하거나 다른 결과를 갖는 것일까?

그렇지 않다. 장인정신 모델도 명성 게임 모델의 경우와 마찬가지로 해커 문화를 일종의 증여문화로 작용하게 하는 같은 문제에 봉착한다. 품질을 측정할 방법이 없다면 어떻게 품질을 극대화할 수 있을까? 만약 희소 경제가 작동하지 않는다면 동료 간의 평가 이외에 어떤 측정 방법을 이용할 수 있을까? 따라서 어떤 장인정신 문화도 종국적으로 명성 게임을 통해 조직될 수밖에 없다. 사실 이러한 예는 중세 길드 이후부터 이어진 많은 역사적 장인 문화에서 찾아볼 수 있다.

한 가지 중요한 점은 장인정신 모델이 증여문화 모델보다 설명력이 약하다는 것이다. 장인정신 모델은 이 글의 처음에 제시한 모순[^3-27]을 설명하는데 증여문화 모델보다 도움이 되지 않는다.

[^3-27]: 역자주 해커들의 이념과 실제 행동 방식 사이에 모순이 존재한다는 것.

결국 장인정신의 동기 그 자체는 우리가 가정하려고 한 명성 게임과 심리적으로 그리 동떨어진 것이 아닐지 모른다. 여러분이 만든 멋진 프로그램이 책상 서랍에 넣어진 채 다시는 사용되지 않는다고 생각해 보자. 반대로 많은 사람이 즐겁고 유용하게 사용하는 경우도 생각해 보자. 어느 쪽이 여러분을 더 만족스럽게 하는가?

그럼에도 불구하고 장인정신 모델을 좀 더 살펴보도록 하자. 이 모델은 많은 해커에게 직감적으로 매력을 주고 또한 몇 가지 측면의 개인행동에 대해 썩 좋은 설명을 해준다.[^3-28]

[^3-28]: 원주 진화론적인 표현으로 말하면 장인정신의 촉발 자체는 (내면화된 윤리처럼) 다른 사람을 기만할 때 오는 높은 위험과 비용의 결과일 것이다. 진화심리학자들은 인간의 두뇌 논리가 사회적 속임수와 기만을 감지할 수 있도록 특화돼 있다는 실험적 증거들을 모아왔다. (다음 책은 진화심리학에 대한 탁월한 입문서다. 이 책은 내가 제시한 3가지 문화 유형인 명령체계, 교환경제, 증여문화가 인간 정신과 매우 깊이 관계되어 있음을 직접적으로 설명하고 있다. 『[The Adapted Mind: Evolutionary Psychology and the Generation of Culture, J. Barkow, L. Cosmides, J. Tooby, Oxford University Press, 1992, ISBN: 9780195101072](http://books.google.com.au/books?id=SxX4gRzOS6oC&printsec=frontcover#v=onepage&q&f=false)』) 우리 선조들이 왜 속임수를 간파하는 능력을 선택해야만 했는가를 이해하기는 매우 쉽다. 그것은 상대적으로 높은 지위를 획득하기 위한 것이다. 따라서 자신에게 이익을 주는 어떤 성격의 소유자라는 평판을 얻고 싶지만 그런 성격을 가진 것처럼 사람들을 속이는 위험과 비용이 높다면, 사람들을 속이기보다 그런 성격을 실제로 가질 수 있게 노력하는 것이 더 나은 전략이다. (‘정직은 최선의 방책이다.’) 진화심리학자들은 이 이론으로 술집에서 벌어지는 싸움 같은 행동을 설명할 수 있다고 말한다. 혈기왕성한 젊은 남자가 강하고 거칠다는 명성을 얻는 것은 사회적이나 (심지어 현재의 페미니즘 풍조에서도) 성적으로 모두 유용하다. 하지만 강하고 거친 척 기만하는 것은 극도로 위험하다. 왜냐하면 사실이 드러나면 그렇지 않았을 때보다 더 열등한 지위를 갖게 되기 때문이다. 기만의 위험비용이 너무 크기 때문에 때로는 강하고 거칠다는 것을 싸움으로 증명하기보다 속으로만 간직하는 것이 더 나을 수 있다. 기만보다 논쟁이 덜 되고 있는 정직에 대해서도 같은 논리를 적용할 수 있다. 장인성을 나타내거나 숨기는 데도 이와 같은 높은 위험과 비용이 연관된다. 따라서 명상을 통해 얻을 수 있는 평온함과 같은 창조적 작업의 결과로 얻을 수 있는 정신적 보상을 과소평가해서는 안되겠지만, 장인성을 드러내려는 충동에는 기만과 그 결과에 대한 내면화된 의식이 부분적으로 관계돼 있는 것이다. (여기서 기만의 대상이 될 수 있는 것은 '각고의 노력을 할 수 있는 능력'이나 이와 유사한 것이 된다.) 아모츠 자하비(Amotz Zahavi)의 극단적 장애 이론(Handicap theory)에 의하면 수컷 공작의 야한 꼬리나 수사슴의 육중한 뿔은 암컷에게 성적 매력이 준다. 왜냐하면 그것이 수컷의 건강에 대한 (그리고 결과적으로 건강한 새끼를 낳기 적합하다는) 신호가 되기 때문이다. 이것은 “나는 이런 과장된 장식에 에너지를 쏟고도 남을 만큼 정력적이다”라는 말과 같다. 소스 코드를 공짜로 내던지는 것은 현란하고 낭비적인 장식물인 스포츠카를 소유하는 것과 같다. 이러한 행동은 분명한 대가가 없을 때는 비싼 비용이 되지만 최소한 이론적으로는 섹시하게 만든다.

이 글의 초판이 발표된 후에 익명으로 온 다음과 같은 의견이 있었다. “당신이 명성을 얻기 위해 일하는 것은 아닐지 모르지만, 일을 잘하면 그 결과로 받는 실제 보상이 바로 명성이지요.” 이것은 매우 미묘하고 중요한 지적이다. 장인이 그것을 인식하고 있든 아니든 간에 명성을 좇는 동기는 계속 작용하고 있는 것이다. 따라서 결국 해커가 자신의 행동을 명성 게임의 일부로 이해하고 있든 아니든 간에 그의 행동은 명성 게임에 의해 움직이게 되는 것이다.

또 다른 많은 의견은 동료에게 존경받는 것과 해킹의 즐거움을 에이브러햄 매슬로`Abraham Maslow, 1908∼1970`의 잘 알려진 ‘욕구단계설`Hierarchy of Needs`’ 모델 중 생존 욕구 이상의 단계와 연관시키기도 했다.[^3-29] 이 관점에서 보면 해킹의 즐거움은 (안전에 대한 욕구나 소속감에 대한 욕구, 존경받고 싶은 욕구를 포함한) 하위 수준의 욕구가 최소한의 만족을 느낄 정도로 충족되기 전까지는 이루어질 수 없는 상위 수준의 자아실현 욕구나 초월적 욕구가 된다. 따라서 명성 게임 모델은 해킹의 즐거움이 사회적인 맥락에서 개인의 기본 동기가 될 수 있는가를 설명하는 중요한 열쇠가 될 수 있을지 모른다.

[^3-29]: 원주 에이브러햄 매슬로의 욕구단계설에 대한 간략한 정리와 이와 관련된 이론들을 다음 글에서 참고할 수 있다. <http://www.edpsycinteractive.org/topics/conation/maslow.html>

## 명성의 여러 모습

다음과 같은 이유로 모든 증여문화에서는 동료 간의 평판과 명성이 중요하게 작용한다.

가장 명백한 첫 번째 이유는 동료들 간의 좋은 평판은 그 자체가 보상이기 때문이다. 앞서 살펴본 것처럼 인간은 진화적인 이유로 그렇게 느끼게 되어 있다. (많은 사람은 명성에 대한 욕망을 다양하게 승화시켜 가시적인 동료 집단과 명확한 관련이 없는 ‘명예’나 ‘윤리적 완성’, ‘신앙심’ 등과 같은 것으로 전환하는 것을 배우게 된다. 그러나 이것이 증여문화의 근본적인 작용원리를 바꾸는 것은 아니다.)

둘째, 명성은 다른 사람에게 관심과 협력을 얻을 수 있는 매우 좋은 (그리고 순수한 증여경제에서는 유일한) 방법이다. 만약 어떤 사람이 관대함과 지성, 공정한 거래, 지도력 등의 훌륭한 자질로 잘 알려져 있다면 그 사람과의 관계를 통해 얻는 것이 있다고 다른 사람을 설득하는 것이 훨씬 쉬워진다.

셋째, 만약 증여경제가 교환경제나 명령체계와 접하고 있거나 뒤섞여 있으면, 명성이 상대 쪽으로도 연결돼 그곳에서 더 높은 지위를 얻을 수 있다.

이러한 일반적인 이유 외에도 해커 문화의 특수한 상황은 실제 세계의 증여문화에서보다 명성을 훨씬 가치 있게 만들어 준다.

해커 문화의 대표적인 특수 상황은 선물로 주는 인공물이 (다른 방식으로 표현하면 자신의 시간과 에너지로 만든 눈에 보이는 표식이) 매우 복잡하다는 것이다. 이것의 가치는 물질적인 선물이나 교환경제의 화폐와 비교가 안 될 정도로 불명확하다. 또한 좋은 선물과 나쁜 선물의 차이를 객관적으로 구분하는 것이 더욱 어렵다. 따라서 지위를 얻기 위해 선물을 내놓은 사람의 성공은 전적으로 동료들의 판단에 결정적으로 의존한다.

또 다른 특수 상황은 오픈소스 문화의 상대적 순수성이다. 대부분의 증여문화는 가족이나 씨족 집단과 같은 명령계통의 경제 관계나 사치품의 교역과 같은 교환경제와 타협하게 된다. 그러나 오픈소스 문화 안에는 이와 유사한 종류의 타협이 전혀 이루어지지 않는다. 따라서 동료의 평판에 의한 지위 획득 이외에는 명성을 얻을 방법이 사실상 존재하지 않는다.

## 소유권과 명성 추구 동기

이제 지금까지의 분석을 한데 모아 해커 소유권 관습을 일관적으로 설명해 보자. 얼누리의 개간으로 얻을 수 있는 수익은 해커 증여문화 안에서의 동료들의 평판이고 거기에는 여러 가지 2차적 이익과 부작용이 있었다.

이러한 이해를 통해 해커 문화의 로크 소유권 관습을, 명성을 추구하는 동기를 극대화하는 수단으로 분석할 수 있다. 즉 동료들의 신뢰가 꼭 주어질 사람에게만 주어지고 그렇지 않은 사람에게는 주어지지 않게 하는 수단인 것이다.

지금까지 살펴본 3가지 금기는 이러한 분석에 완전히 부합한다. 다른 사람이 저작물을 악용하거나 엉망으로 만들면 명성이 부당하게 훼손될 수 있다. 따라서 해커 문화의 금기는 (그리고 이와 관련된 관습은) 이런 일이 발생하는 것을 막으려는 것이다. (보다 현실적으로 말하면 해커들은 프로젝트를 분기하거나 다른 프로젝트에 대한 비공식 패치 작성을 자제하는데, 이것은 자신에게 있을지 모를 동일한 경우에 대해 자신의 정통성을 주장하기 위해서다.)

 1. 프로젝트 분기는 좋지 않다. 왜냐하면 분기 이전에 공헌했던 사람의 명성이 훼손될 위험이 있기 때문이다. 프로젝트가 분기된 후에도 명성을 유지하기 위해서는 분기된 프로젝트 모두에서 활동할 수밖에 없다. (분기된 프로젝트 모두에서 실제로 활동하는 것은 일반적으로 너무 혼란스럽거나 어려울 것이다.)

 1. 비공식 패치의 배포는 (또는 더 심각하게 비공식 바이너리의 배포는) 소유자를 부당한 명성 위험에 노출시킨다. 공식 코드가 온전하다고 해도 비공식 패치의 버그로 인한 비난은 소유자에게 돌아간다.[^3-30]

[^3-30]: 원주 비공식 패치에는 몇 가지 미묘한 점이 있다. 비공식 패치는 우선 우호적 패치와 비우호적 패치로 구분할 수 있다. 우호적 패치는 (통합이 실제로 이루어지든 아니든 간에) 유지관리자의 통제 아래 프로젝트의 중심 소스 기반에 통합되기 위해 만들어진다. 그러나 비우호적 패치는 유지관리자가 승인하지 않는 방향으로 프로젝트를 몰고 가기 위해 만들어진다. (특히 리눅스 커널 같은) 몇몇 프로젝트들은 우호적 패치에 무척 관대하며 베타 테스트 단계에서는 심지어 독립적인 배포를 권장하기도 한다. 그러나 비우호적 패치는 본래의 코드와 경쟁하려는 뜻을 분명히 하고 있기 때문에 심각한 문제가 된다. 많은 양의 비우호적 패치를 유지하게 되면 결국 프로젝트 분기로 이어지는 경향이 있다.

 1. 몰래 누군가의 이름을 프로젝트에서 삭제하는 것은 문화적인 맥락에서 볼 때 최악의 범죄 중 하나다. 이것은 다른 사람이 증여한 것을 훔쳐 자신의 것인 양 내놓는 것이다.

물론, 프로젝트 분기나 비공식 패치의 배포는 원 개발자 집단의 명성을 직접적으로 공격하는 것이다. 만약 여러분이 프로젝트를 분기시켰거나 비공식 패치를 배포하고 있다면 이렇게 말하고 있는 것이다. “당신들은 내가 하는 것만큼 프로젝트를 잘 이끌지 못하고 잘못된 결정을 내렸다.” 여러분이 분기시킨 변형판을 사용하는 사람이 있다면 그것은 여러분의 도전에 대한 지지다. 그러나 이것이 비록 동료검토`peer review`의 극단적 형태라고 해도 그 자체로는 공정한 도전이다. 그렇기 때문에 이것이 금기를 강화하는데 기여하는 것은 틀림없지만, 이것 자체로 금기를 설명하기에는 충분치 않다.

3가지 금기 행위 모두 개인 (또는 집단)뿐 아니라 오픈소스 공동체 전체에 해를 끼친다. 이것은 잠재적 기여자가 증여나 생산 활동에 보상이 있으리라고 생각할 가능성을 줄여 공동체 전체에 은연중에 해를 미친다.

3가지 금기 중 2개에 대해서는 대안적인 설명이 가능하다는 점도 중요하다.

먼저 (가)의 대안적 설명이다. 해커들은 흔히 분기로 만들어진 자식 프로젝트들이 미래에 대체로 같은 방향으로 전개된다는 낭비적인 중복 작업을 탄식하며 이것을 프로젝트 분기에 대한 반감의 이유로 설명한다. 또한 프로젝트 분기가 공동 개발자 공동체를 분리시켜 부모 프로젝트보다 자식 프로젝트에 참여하는 인재의 수를 줄인다고도 말한다.

이 글에 대한 의견 중 하나로 프로젝트가 분기되면, 장기적으로 한 개 이상의 자식 프로젝트가 상당한 시장 점유율을 갖고 생존하기 힘들다는 지적이 있었다. 이것은 프로젝트가 분기되면 어느 쪽이 지위를 잃고 그 동안 이루어 왔던 작업의 상당량 또는 전부가 사라지는 것을 지켜봐야 할 처지가 될지 모르기 때문에 모든 참여자가 프로젝트 분기를 피하고 서로 협동해야 할 동기를 강화시키는 이유가 된다.

또한 분기로 인해 언쟁과 싸움이 일어나기 쉽다는 단순한 사실은 분기에 반대하는 사회적 압력이 되기에 충분하다는 점도 있다. 언쟁과 싸움은 기여자 각자가 자신의 목표를 이루는 데 필요한 협동 작업을 방해한다.

다음은 (나)의 대안적 설명이다. 비공식 패치는 하위 판들과 호환성 문제를 만들고 버그 추적을 너무 복잡하게 해서, 유지관리자가 자신의 실수를 찾기에도 불충분하게 작업량을 증가시킨다.

위의 대안적 설명들은 상당한 진실을 갖고 있고, 로크의 소유권 논리를 강화하는 분명한 역할을 한다. 그러나 지적인 설득력은 있지만 싸움에서 진 쪽뿐만 아니라 매우 거칠게 반응한 관찰자나 방관자에 의해서도 금기가 깨지거나 왜곡되는 감정 싸움이나 세력 다툼이 가끔씩 일어나는 이유는 설명하지 못한다. 중복 작업과 유지 관리에 대한 냉철한 고려만으로는 이 같은 현상을 충분히 설명할 수 없다.

(다)에 대해서는 명성 게임 분석 이외에는 설명을 찾기 힘들다. 이 금기에 대해 ‘공정하지 않기 때문’이라는 것 이상의 분석이 좀처럼 이루어지지 않는 것은, 그 자체가 나름의 설명일 것이다. 이에 대해서는 다음 절에서 살펴보기로 하자.

## 자아의 문제

이 글의 처음에서 문화의 무의식적 적응 지식이 의식적 이념과 때때로 다를 수 있다고 언급했다. 그리고 그 중요한 예의 하나로 표준적인 이용허락에 명시된 목적에 어긋남에도 불구하고 로크의 소유권 관습이 널리 지켜지고 있다는 것을 살펴본 바 있다.

나는 해커들과 함께 명성 게임 분석에 대해 토론하면서 이러한 현상의 또 다른 흥미로운 예를 발견할 수 있었다. 그것은 많은 해커가 동료 사이에서 명성을 얻거나, 내가 조심스럽지 않게 사용한 표현인 ‘자아 만족’을 얻으려는 욕구 때문에 행동하고 있다는 사실을 인정하길 매우 꺼리며 이러한 분석에 반대한다는 점이다.

이것은 해커 문화에 대한 흥미로운 점을 보여준다. 자신의 욕구를 충족하기 위한 이기주의와 자기 본위의 동기들은 의식적으로 불신되고 경멸되는 것이다. 심지어 공동체가 이익을 얻을 수 있을 경우에도 개인 홍보는 가차 없이 비판되는 경향이 있다. 사실 이런 경향은 매우 극단적이어서 해커 문화의 지도자나 원로는 항상 부드럽고 재치 있게 자신을 낮춤으로써 자신의 지위를 지키려고 한다. 자기를 낮추는 이런 태도가, 어떻게 전적으로 자아에 의해 움직이는 것이 명백한 동기 구조와 양립할 수 있는 것일까?

그러한 태도는 대부분 ‘자아’에 대한 서구의 부정적인 태도에서 연유한다. 대부분의 해커 문화 모형에서는 자아 만족을 추구하는 것이 나쁜 (또는 적어도 어른답지 못한) 동기라고 학습된다. 자아 만족의 추구는 저명인사 쯤은 돼야 참고 봐줄 만한 기행으로 여겨지며, 흔히 실제적인 병적 증상의 표시로 간주된다. 오직 ‘동료 사이의 평판’이나 ‘자부심’, ‘전문가 의식’, ‘성취에 대한 긍지’ 등의 형태로 위장되고 승화된 모습만이 일반적으로 받아들여진다.

나는 해커 문화의 유산 중에서 이런 불건전한 부분의 뿌리와 (심리학과 행동 양식에서 찾을 수 있는 모든 증거에도 불구하고) 정말로 항상 ‘이타’적인 동기가 있다고 믿게 하는 놀랄 만큼 많은 자기기만의 해악에 대해 한편의 다른 글을 쓰려고 했다. 그러나 (그들의 다른 실패가 무엇이었든 간에) 프리드리히 니체`Friedrich Nietzsche, 1844∼1900`와 에인 랜드`Ayn Rand, 1905∼1982`가 ‘이타주의’를 잘 인식되지 않던 이기심의 한 형태로 끌어내린 아주 훌륭한 작업을 이미 끝냈기 때문에 내가 그런 글을 쓸 필요는 없을 것 같다.[^3-31]

[^3-31]: 역자주 에인 랜드는 객관주의와 개인주의 철학을 전개했던 러시아 출신의 사상가이자 저술가이다. 그녀의 철학은 “[나는 결코 다른 사람을 위해 살거나, 다른 사람더러 나를 위해 살아달라고 부탁하지 않겠다](http://article.joins.com/news/article/article.asp?ctg=15&Total_ID=260554)”라는 말로 요약할 수 있다. 그녀의 저작 중 특히 이 글과 관련된 것은 『[이기심의 미덕(Virtue of Selfishness, 1964)](http://philo.abhinav.ac.in/Objectivism/Ayn%20Rand%20-%20The%20Virtue%20of%20Selfishness.pdf)』이다. 프리드리히 니체는 자라투스트라로 상징되는 초인 철학으로 널리 알려진 독일의 사상가로 여러 저작에서 이기심을 재평가한 내용을 찾을 수 있는데 『차라투스트라는 이렇게 말했다, 정동호 옮김, 책세상, 2000년, ISBN: 9788970132099』의 ‘베푸는 덕에 관하여’나 『아침놀, 박찬국 옮김, 책세상, 2004년, ISBN: 9788970134345』 등의 여러 부분에서 증여와 이타심은 이기심에 의한 것이라는 주장을 볼 수 있다. <역자주 24>와 관련해서 『서태평양의 항해자들, 브로니스라브 말리노브스키, 최협 옮김, 전남대학교출판부, 2013년, ISBN: 9788997620913』에도 이와 같은 취지의 분석이 있다. 「증여의 근본적인 동기는 소유와 권력을 과시하고 싶어 하는 허영심이고, 따라서 증여의 근본적인 동기를 공산주의적 경향 또는 제도에 연관시키는 가정은 애초부터 제외되는 것이다.(249페이지)」철학과 인류학 이외에 사회생물학 분야에서도 다음과 같은 보다 간명한 설명을 찾을 수 있다. 「정밀하게 조사해 보면 이타적으로 보이는 행위는 실제로 모양을 바꾼 이기주의인 경우가 많다.(『이기적 유전자, 리처드 도킨스, 홍영남 옮김, 을유문화사, 2002년, ISBN: 9788932460802』, 27페이지)」 「이타주의의 유형들은 대부분 궁극적으로 이기적인 속성을 지니고 있다.(『인간 본성에 대하여, 에드워드 윌슨, 이한음 옮김, 사이언스북스, 2000년, ISBN: 9788983710482』, 215페이지)」

이 글은 도적철학이나 심리학에 대해 논하는 것이 아니므로 자아가 나쁘다는 것을 믿음으로써 해를 미칠 수 있는 작은 예를 하나만 들어 볼까 한다. 그것은 해커들이 자신의 문화가 갖고 있는 사회적 역학을 의식적으로 이해하는 것을 감정적으로 어렵게 한다는 점이다.

그러나 이런 관점의 분석을 끝낸 것은 아니다. 눈에 띄게 자아 중심적인 행동에 반대하는 금기는 우리 주변의 문화에서도 찾아볼 수 있지만, 특히 해커 (하위) 문화에서 지나치게 강조되고 있기 때문에 이것이 해커들을 위한 특별한 적응 기능의 일종이라고 생각할 수밖에 없다. 확실히 연극인이나 매우 부유한 사람들의 동류 집단 문화와 같은 많은 종류의 증여문화에서 이러한 금기는 (존재하지 않거나) 더 약하다.


## 겸손의 가치

명성이 해커 문화 보상 원리의 핵심이라는 것을 알아보았다. 이제 왜 이 사실이 절반은 감춰지며 대부분 인정되지 않는 상태로 있는 것이 중요하다고 여겨지는지 이해할 필요가 있다.

먼저 해적 크래커 문화와 비교해 보는 것이 유익할 것 같다. 이 문화에서는 지위를 추구하는 행동이 공공연하게 이루어지며 심지어 노골적이기까지 하다. 크래커들은 (정품 소프트웨어가 출시되는 당일에 이를 크랙한 소프트웨어를 배포하는) ‘제로데이 와레즈`zero-day warez`’로 환호를 받으려 하지만 소프트웨어를 크랙한 방법은 공개하지 않는다. 이 마술사들은 자신의 기교를 공개하길 싫어한다. 그 결과로 인해 크래커 문화의 지식 기반은 전체적으로 천천히 성장할 뿐이다.

이와 대조적으로 해커 공동체에서 한 사람의 작업은 그 자체가 자기 자신의 주장이 된다. 해커 문화에는 (최고의 기술이 승리하는) 매우 엄격한 실력주의가 있으며, 품질은 작업물 그 자체로 평가되도록 하는 (실제로 그래야만) 강한 풍조가 있다. 자신의 프로그램에 대해 할 수 있는 최대의 자랑은 코드가 ‘동작한다’는 것과 어떤 유능한 프로그래머도 마음에 들 것이라고 말하는 정도다. 따라서 해커 문화의 지식 기반은 빠르게 성장한다.

자아 중심적 태도를 막는 금기는 생산성을 증가시킨다. 그러나 이것은 부수적인 효과에 지나지 않는다. 보다 직접적으로 보호되는 것은 공동체의 동료검토 시스템 안에 있는 정보의 질이다. 다시 말하면, 자랑이나 자만은 창조적이고 협력적인 행동에 있어 마치 실험에서 중요 신호를 왜곡시키는 소음처럼 작용하기 때문에 억제된다.

매우 비슷한 이유 때문에 코드가 아닌 저자를 공격하는 일은 일어나지 않는다. 이것을 뒷받침하는 미묘하지만 흥미 있는 사실이 하나 있다. 그것은 이념적이고 개인적인 의견 차이에 대해서는 해커들이 매우 자유롭고 신랄하게 논쟁하지만 다른 해커의 기술 작업 능력을 공격하는 것은 그 유래를 찾을 수 없다는 점이다. (심지어 사적인 비평도 드물며 침묵하는 경향이 있다.) 버그를 찾아내 비평하는 일은 언제나 프로젝트의 이름에 대해 이루어지며, 개인의 이름을 놓고 비평하지 않는다.

더 나아가서 개발자는 과거의 프로그램 버그를 빌미로 당연한 듯이 비난받지 않는다. 버그가 있었다는 사실보다는 버그가 수정됐다는 것이 일반적으로 더 중요하게 생각된다. 한 독자가 지적한 것처럼 ‘이맥스 버그’를 고쳐 지위를 얻을 수는 있지만 ‘리처드 스톨먼의 버그’를 고쳐 명성을 얻을 수는 없으며, 이미 수정된 과거의 이맥스 버그를 이유로 스톨먼을 비판하는 것은 극도로 나쁜 것으로 간주된다.

이것은 학계의 많은 관습과 흥미 있는 대조가 된다. 학계에서는 결함이 있을 것으로 추정되는 성과를 무너뜨리는 것이 명성을 얻는 매우 중요한 방법이다. 그러나 해커 문화에서는 이러한 행동이 보다 심하게 금기시된다. 사실 이 글이 처음 출판된 이후 거의 1년이 지난 뒤에 독특한 관점을 가진 한 독자가 이 사실을 지적해 주기 전까지는 해커 공동체 안에 이런 행동이 존재하지 않는다는 것을 나도 인식하지 못했다.

(학계에는 나타나지 않는) 능력을 공격하는 것에 대한 금기는 (학계에도 나타나는) 태도를 공격하는 것에 대한 금기보다 많은 것을 시사해 준다. 왜냐하면 이것을 학계와 해커 문화가 갖고 있는 의사소통과 지원 구조의 차이와 연결시킬 수 있기 때문이다.

해커 문화에서 증여가 이루어지는 매체는 무형적인 것이다. 해커 문화의 의사소통 수단은 감정적인 느낌을 표현하는데 불충분하며 구성원들이 직접 대면하는 것은 규칙이라기보다 예외적인 것이다. 이것은 대부분의 다른 증여문화에서보다 잡음에 대한 인내력을 약하게 만들기 때문에 결국 능력과 태도 모두에 대한 공격 금기의 설명이 된다. 해커의 능력에 대한 비판이 신랄하게 이루어지면, 해커 문화 안에서 명성을 축적할 수 있는 토대가 유지될 수 없을 만큼 손상되는 것이다.

잡음에 대한 취약성은 해커 공동체 원로들에게 공적인 겸손이 요구된다는 점도 설명해 준다. 그들은 위험한 잡음을 막는 금기를 유지하기 위해 자랑하거나 자만하지 않는 것처럼 보여야 한다.[^3-32]

[^3-32]: 원주 지도자에게 겸손을 요구하는 것은 증여나 잉여 문화에서 일반적으로 볼 수 있는 특성이다. 데이비드 크리스티(David Christie, dc@netscape.com)는 피지 군도 외곽 지역을 여행한 뒤에 다음과 같은 사실을 알려주었다. 「오픈소스 지도자에게 있다는 겸손과 자기를 낮추는 것과 같은 종류의 태도를 피지의 추장들에게서 목격할 수 있었다. (중략) 실제적인 권력과 한결같은 큰 존경을 받고 있음에도 불구하고 우리가 만난 추장들은 참된 겸손을 지녔으며 흔히 그들의 의무를 성자처럼 받아들이고 있었다. 이러한 사실은 추장의 지위가 투표나 인기에 의한 것이 아니라 세습된다는 것을 고려하면 매우 흥미롭다. 동료에 의해 선택되는 것이 아니라 추장으로 태어난다는 사실에도 불구하고 보여지는 그러한 겸손은 어느 정도 문화에 의해 학습되는 것이다.」 크리스티는 피지의 추장들에게 찾아볼 수 있는 특성이 협력을 강요할 수 없는 어려움에서 기인한 것으로 생각된다는 점을 강조했다. 추장은 부족에게 회유나 협박에 사용할 ‘당근이나 채찍’을 갖고 있지 않은 것이다.  

성공적인 프로젝트 유지관리자가 되고 싶다면 부드럽게 말하는 것이 효과적이다. 유지관리자가 되기 위해서는 자신이 좋은 판단을 할 수 있다는 인식을 공동체에 심어주어야만 한다. 왜냐하면 유지관리자의 작업은 대부분 다른 사람의 코드를 판단하는 것이기 때문이다. 코드의 품질을 판단할 수 없는 것이 분명하거나 프로젝트로 얻은 명성을 불공평하게 혼자 독차지할 것처럼 행동하는 사람이 유지관리자로 있는 프로젝트에 그 누가 기여하려고 하겠는가? 잠재적인 기여자는 객관적으로 타당할 때 “이게 내가 만든 것보다 훨씬 잘 동작하는 것 같으니 이걸 사용해야겠어”라고 말할 수 있는 충분한 겸손과 기품이 있으면서 합당한 곳에 보상을 주는 프로젝트 지도자를 원한다.

겸손한 태도가 필요한 또 하나의 이유는, 오픈소스 세계에서는 프로젝트가 완료됐다는 인상을 가능한 주지 않는 것이 좋기 때문이다. 프로젝트가 완료됐다는 인상은 잠재적인 기여자에게 자신이 필요 없다는 느낌을 줄 수 있다. 지렛대 효과`leverage`를 극대화할 수 있는 방법은 프로그램 상태에 대해 겸손한 것이다. 프로그램 코드를 자랑한 뒤에 “아차! x, y, z 같은 기능이 없군요. 이런 기능이 있으면 더 좋은 프로그램이 될 텐데…”라고 말한다면, 흔히 x, y, z의 패치가 빠르게 올라오곤 한다.

마지막으로, 개인적인 경험으로 볼 때 일부 선구적인 해커들의 자기 비하적 행동은 자신이 개인숭배의 대상이 되지 않을까 하는 현실적인 (그리고 이유가 없지 않은) 불안감에서 연유하기도 한다. 리누스 토르발스와 래리 월은 이런 회피 행위의 예를 분명히 그리고 많이 보여준다. 한 번은 내가 래리 월과 저녁 식사 외출을 했을 때 “우리 중에 당신이 제일 고수니, 맘에 드는 식당을 골라 보세요”라고 얘기하자 확연하게 움찔거리는 것을 느낄 수 있었다. 정말로 그랬다. 프로젝트 지도자의 인격과 프로젝트의 공유 가치를 구분하지 못해서 많은 훌륭한 자발적 공동체들이 붕괴됐다. 래리 월과 토르발스는 그 양식을 잘 알고 있는 것이다. 다른 한편으로 해커들은 대부분 래리 월처럼 되길 원하겠지만, 만약 그렇게 된다면 그땐 이 사실을 인정하게 될 것이다.

## 명성 게임 모델의 포괄적 의미

명성 게임 분석에는 명확하게 바로 알 수 없는 몇몇 함축적 의미가 있다. 그중 많은 것은 기존 프로젝트에 협력하는 것보다 성공적인 새로운 프로젝트를 만드는 것에서 더 큰 명성을 얻을 수 있다는 데서 온다. 기존의 소프트웨어를 점진적으로 향상시키는 또 하나의 아류가 되기보다 월등하게 혁신적인 프로젝트로부터 더 많은 것을 얻을 수 있다. 반면에 저자 자신만 이해할 수 있거나 자기에게만 필요한 소프트웨어는 명성 게임에서 성공할 가능성이 없다. 또한 사람들에게 새로운 프로젝트를 인식시키는 것보다 기존의 프로젝트에 기여하는 것이 흔히 더 주목받기 쉬운 방법이다. 마지막으로 이미 성공한 프로젝트와 경쟁하는 것은 빈 틈새를 채우는 것보다 훨씬 어려운 일이다.

따라서 프로젝트를 성공시키기 위해서는 (가장 유사한 경쟁 프로젝트인) 이웃과 유지해야 할 최적의 거리가 있는 셈이다. 너무 가까우면서 제한된 품질의 아류 제품이 되면 돌아올 이익이 형편없다. (차라리 기존의 프로젝트에 기여하는 편이 낫다.) 또한 너무 멀리 떨어져 있어서 아무도 노력을 인식할 수 없으면, 이해되거나 사용되지 않는 제품이 돼 돌아올 수익이 역시 형편없어진다. 이것은 정착자들이 물리적 접경을 확장해가는 것과 상당히 유사한 (임의적이 아닌 유한 확산 프랙털[^3-33] 같은) 얼누리 개간의 한 양식이 된다. 프로젝트들은 인접한 경계 간의 기능적 틈새를 채워가는 경향이 있다.[^3-34]

[^3-33]: 역자주 수학자 브누아 망델브로(Benoit Mandelbrot, 1924∼2010)가 만든 용어인 프랙털(fractal)은 카오스 같이 외관상 무질서하게 보이는 혼돈 중에 내재된 질서를 규명하기 위한 기하학 및 그 형상을 가리키는 말이다. 개척지 간의 경계가 프랙털 모형을 따른다는 것은, 겉으로는 임의적이고 무질서하게 보이지만 실제로는 영역 간의 거리와 배치가 정착민들이 가진 심리적, 기능적 이유로 인해 일정한 기준과 법칙을 따른다는 것을 의미한다. 프랙털 도형은 도형의 일부를 계속 확대해 나가면 전체 모습과 비슷한 형태가 반복적으로 나타나는데, 이러한 자기유사성(self-similarity)이 프랙털의 가장 큰 특징이다. 다음 주소의 프로그램을 이용해서 대표적인 프랙털 형상인 망델브로 집합 모형을 만들어 볼 수 있다. <http://sourceforge.net/projects/quickman/>

[^3-34]: 원주 명확한 사실이지만, 성공적인 프로젝트를 창시한 사람은 거의 동등한 노력의 디버깅과 지원 작업으로 프로젝트에 기여한 사람보다 더 많은 명성을 얻는다. 이 글의 초판에서 나는 “이것은 노력에 대한 비교를 통한 이성적 평가인가, 무의식적인 토지 모델에 근거한 2차 효과인가?”라는 의문을 제기했었다. 몇몇 독자들이 본질적으로 같은 설득력 있는 의견을 말해 주었는데, 다음은 라이언 월드론(Ryan Waldron, rew@erebor.com)의 분석이다. 「로크의 토지 소유권 이론의 맥락에서 보면 새롭고 성공적인 프로젝트를 기초한 사람은 본질적으로 다른 사람이 개간할 수 있는 영역을 발견하거나 개척한 것이다. 대부분의 성공적인 프로젝트는 점진적으로 수익이 줄어들기 때문에 어느 정도 시간이 지나면 프로젝트에 기여한 사람에 대한 보상이 분산돼 나중에 참여한 사람은 그가 기여한 일의 품질과 관계없이 큰 명성을 얻기 어려워진다. 예를 들어, 내가 개량한 펄 코드가 제아무리 좋은 것이라 해도 래리 월이나 톰 크리스티얀센(Tom Christiansen), 랜들 슈워츠(Randal Schwartz) 같은 사람이 가진 명성의 일부도 갖기 힘들 것이다. (역자주 3명은 펄 공동체의 대표적인 기여자면서 『Programming Perl, O'Reilly, 1996, ISBN: 9781565921498』의 공동 저자다.) 그러나 만약 (누군가) 내일 새로운 프로젝트를 만들고 그 초기에 내가 빈번히 참여한다면 (공헌의 정도가 비슷하다고 가정할 때) 프로젝트가 성공한 이후에 배당될 명성의 분배 몫은 초기에 참여했다는 것 때문에 더 늘어날 것이다. 이것은 마이크로소프트의 주식을 초기에 산 사람과 나중에 산 사람의 경우와 유사하다. 모든 사람이 이익을 얻겠지만, 초기에 주식을 산 사람의 이익은 더욱 크다. 그래서 나는 어떤 시점에서 규모가 지속적으로 커지고 있는 기존 회사보다 새로이 성공적인 기업공개(IPO: Initial Public Offering)를 한 회사에 더 관심이 있다.」 월드론의 비유는 확장될 수 있다. 프로젝트 창시자는 다른 사람에게 유용하거나 받아들여질지 아닐지 모르는 새로운 아이디어의 전도사다. 따라서 프로젝트 창시자는 (자신의 명성이 손상될 가능성 같은) IPO 위험과 유사한 것을 갖고 있으며, 이것은 프로젝트를 지원하는 다른 동료에 비해 높다. 창시자의 보상은 다른 사람들이 실제로 더 많은 기여를 하더라도 일정하게 유지되는데, 이것은 교환경제에서 위험과 그에 따른 보상의 관계와 쉽게 연관 지어 볼 수 있다. 또 다른 독자는 우리 신경계가 안정 상태가 아닌 차이를 감지하게 발전했다고 지적한다. 따라서 새로운 프로젝트 창설에 의한 혁명적인 변화는 점진적으로 꾸준하게 개선된 축적 결과보다 더 많은 주목을 받게 된다. 이런 이유로 리눅스는 다른 개발자들이 기여한 수많은 개선의 네트워크 효과에 의해 한 사람이 만들 수 있는 그 어떤 운영체제보다 성공적인 것이 되었음에도 불구하고, 리누스 토르발스 개인이 리눅스의 아버지로 존경받는 것이다.

매우 성공적인 몇몇 프로젝트는 카테고리 킬러`category killer`[^3-35]가 된다. 이런 분야를 개간하는 것은 그 누구도 원치 않는다. 왜냐하면 이미 확고한 기반을 가진 상대와 경쟁하며 다른 해커의 관심을 끄는 것은 너무 어려운 일이기 때문이다. 결국 그 대신 이미 커진 성공적인 프로젝트에 확장기능을 추가하는 것으로 자신의 노력을 차별화할 수 있다. 카테고리 킬러의 고전적인 예는 GNU 이맥스다. 이맥스 변종들은 완전하게 프로그래밍 가능한 편집기로서 그 분야의 생태적 틈새를 완벽히 채워버렸다. 그래서 1980년대 초반부터 개인이 취미 삼아 만든 편집기 외에는 경쟁자가 나타나지 않았다. 그 대신 사람들은 확장기능인 이맥스 모드를 만들었다.

[^3-35]: 역자주 소프트웨어 분야에서 사용하는 카테고리 킬러의 의미는 특정 부문에서 압도적으로 많이 사용되는 제품을 말한다. GCC는 리눅스 컴파일러의 카테고리 킬러라고 할 수 있고, MS 오피스는 기업용 오피스 소프트웨어의 카테고리 킬러라 할 수 있다 

전체적으로 볼 때, (틈새를 메우려는 것과 카테고리 킬러가 되려는) 두 가지 경향으로 인해 시대적 추세에 따른 프로젝트의 대략적인 예측이 가능하게 된다. 1970년대에 존재했던 대부분의 오픈소스 프로젝트는 자신의 필요에 맞는 조그만 프로그램이나 시연`demo`을 위한 것이었다. 1980년대에는 개발 및 인터넷 도구로 옮겨갔으며, 1990년대에는 운영체제로 넘어갔다. 각각은 모두 기존 추세의 가능성이 거의 소진됐을 때, 더욱 새롭고 어려운 수준의 문제로 그 방향을 옮겨갔다.

이러한 경향은 가까운 장래에 대한 흥미 있는 암시가 된다. 1998년 초반인 현시점에서 볼 때 리눅스는 ‘오픈소스 운영체제’ 분야의 확실한 카테고리 킬러 같다. 그래서 사람들은 지금 경쟁 OS를 만드는 대신 리눅스 장치 드라이버나 확장기능을 만들고 있다. 또한 해커 문화에서 생각 가능한 대부분의 저수준 도구는 이미 오픈소스로 만들어졌다. 그렇다면 이제 무엇이 남아있을까?

그것은 애플리케이션이다. 3번째 천년 시대가 시작되면, 오픈소스 개발 활동은 마지막 처녀지인 컴퓨터 비전문가를 위한 프로그램을 향해 점점 더 많이 이동할 것이다. 그 분명한 표시가 [김프](http://www.gimp.org/)`GIMP: GNU Image Manipulation Program`의 개발이다. 어도비 포토샵`Adobe Photoshop`과 유사한 형태의 이미지 작업 도구인 김프는 최근 10년 동안 상용 프로그램에서 꼭 필요하다고 여겨진 사용자 위주 GUI 인터페이스를 갖춘 오픈소스의 첫 번째 중요 애플리케이션이다. 또 다른 예는 [그놈](http://www.gnome.org/)`GNOME: GNU Network Object Model Environment`과 [KDE](http://www.kde.org/)`K Desktop Environment`같은 애플리케이션 툴킷 프로젝트를 중심으로 한 프로그램들이다.

이 글에 대한 의견을 보내온 독자 중 한 명은 인터넷 프로토콜을 복잡하게 만든 뒤 정보를 감춰버리는, 마이크로소프트의 ‘수용과 확장`embrace and extend`’ 정책에 왜 해커들이 본능적인 분노를 터뜨리는가를 미개척지 개간 비유로 설명할 수 있다고 지적했다. 해커 문화는 대부분의 폐쇄 소프트웨어와 공존할 수 있다. 예를 들어 포토샵이 있어도 (오픈소스 대체물) GIMP 주변 영역의 매력은 심각하게 감소하지 않는다. 그러나 마이크로소프트가 프로토콜을 비일상재화시키는데[^3-36] 성공해서 마이크로소프트의 프로그래머만이 관련 프로그램을 만들 수 있게 되면, 그때는 독점 확대로 인한 해가 단지 고객에게만 미치는 것이 아니라 해커들이 개간하고 경작할 수 있는 이용 가능한 얼누리의 양과 질을 줄이는 데까지 미친다. 해커들이 마이크로소프트의 정책을 흔히 ‘프로토콜 오염’이라고 부르는 것은 전혀 이상하지 않다. 해커들은 경작지에 물을 댈 강에 독을 타는 사람을 지켜보는 농부와 똑같은 반응을 하고 있는 것이다!

[^3-36]: 원주 ‘비일상재화(de-commoditizing)’라는 용어는 [핼러윈 문서(Halloween Documents)](https://web.archive.org/web/20130626023241/http:/www.kr.freebsd.org/~cjh/freetime/oss/halloween/)에서 인용한 것이다. 마이크로소프트는 그들의 내부 전략 문서인 핼러윈 문서에서 고객을 착취하기 위한 독점력을 그대로 유지하려는 효과적인 장기 전략을 표현하는데 비일상재화라는 용어를 여과 없이 그대로 사용했다. 비일상재화는 다른 사람이 프로토콜을 사용할 수 없도록 마이크로소프트가 이를 독점 및 은폐한다는 의미이다. (역자주 이 책의 다른 글 「마법의 솥」의 <역자주 67> 참고)

마지막으로 명성 게임 분석은 ‘스스로 해커라 칭한다고 해커가 되는 것이 아니라, 다른 해커들이 해커라고 불러줘야 해커가 되는 것이다’라는 자주 인용되는 격언이 함축하는 바를 설명해준다.[^3-37] 이 관점에서 본다면, 해커란 기술적인 능력뿐 아니라 명성 게임이 어떻게 작용하는가에 대한 이해를 (증여 행위를 통해) 보여준 사람이다. 누구를 해커라 부를 것인가에 대한 판단은 대부분 의식과 문화적응에 속하며 이미 해커 문화 안에 있는 사람들에 의해서만 내려질 수 있다.

[^3-37]: 원주 한 독자는 ‘다른 해커들이 해커라 불러주기 전까지는 해커가 아니다’는 규범은 주변의 희소 경제에서 벗어나기에 충분한 부를 가진 사회 엘리트로 구성된 다른 능력주의 조직에서 볼 수 있는 규범과 다르지 않다고 지적한다. 예를 들어, 중세 유럽 기사도 정신에서 뜻을 품은 기사는 옳은 것을 위해 싸울 것이 기대됐다. 이익보다 명예를 좇고, 약하고 억압받는 사람의 편에 서며, 자신의 기량을 극한까지 시험할 수 있는 도전을 항상 추구해야 한다. 그에 대한 대가로 포부가 큰 기사는 자기 자신을 (그리고 다른 사람에 의해서도) 최고 중의 최고라고 생각할 수 있게 된다. 아서왕 류의 이야기와 무훈 시에서 이상주의와 자발적인 도전, 높은 지위를 추구하는 것들을 극찬한 것을 볼 수 있는데 이와 비슷한 것들을 오늘날 해커들이 흉내 내고 있는 것이다. 이러한 가치와 행동 규범은 큰 헌신이 요구되면서 일종의 권한이 부여되는 기술 문화에서 발전하는 것처럼 보인다.

## 얼마나 좋은 증여인가?

해커 문화가 공헌을 평가하고 명성을 돌려주는 방법에는 일관된 양식이 있다. 다음 규칙들은 어렵지 않게 이해할 수 있다.


 1. 동작하지 않을 것으로 예상하게 됐을 뿐 아니라 실제로도 동작하지 않는다면, 아무리 독창적이고 기발한 것이라도 좋지 않다.

‘예상하게 됐다’라는 표현에 주의하라. 이 규칙은 완전함을 요구하는 것이 아니다. 베타 상태나 실험적인 소프트웨어에는 오류가 있기 마련이다. 이것은 프로젝트 진행 단계와 그에 대한 개발자의 설명에서 사용자가 위험을 정확하게 추정할 수 있어야 한다는 요구다.

이 규칙은 출시 후에 여러 가지 고약한 문제가 발생하지 않으리라고 개발자가 확신하기 전까지 오픈소스 소프트웨어는 1.0의 판 번호도 달지 않은 채 오랫동안 베타 상태로 머무는 경향이 있다는 것을 의미한다. 폐쇄소스 세계에서 판 번호 1.0이 “신중한 사람이라면 쓰지 마세요”라는 뜻이라면 오픈소스 세계에서는 “개발자는 이것에 명성을 걸 수 있다”는 의미에 더 가깝다.

 1. 기존의 기능 영역과 똑같은 작업보다 얼누리를 확장하는 작업이 더 낫다.

이 말을 좀 더 쉽게 표현하면 ‘이미 있는 소프트웨어 기능을 단순히 복제하는 것보다 독창적인 작업이 더 좋다’고 할 수 있다. 하지만 실제로는 그리 단순한 규칙이 아니다. 만약 그렇게 함으로써 폐쇄 프로토콜이나 포맷을 깨고 새롭게 이용할 수 있는 영역을 개척했다면, 이미 있는 폐쇄 소프트웨어의 기능을 복제한 것도 독창적인 작업 못지않게 높이 평가된다.

현재 가장 명성 높은 오픈소스 프로젝트의 하나인 [삼바](http://www.samba.org)`Samba`를 예로 들어보자. 삼바는 마이크로소프트의 사유 파일 공유 프로토콜 SMB`Server Message Block` 를 이용해 유닉스 시스템을 서버나 클라이언트로 동작할 수 있게 해 주는 코드다. 이것은 창조적인 작업이라 할 만한 것이 거의 없고 대부분 리버스 엔지니어링`reverse engineering`의 산물이라고 할 수 있다. 그럼에도 불구하고 삼바 개발 모임의 구성원들은 영웅처럼 여겨진다. 왜냐하면 그들은 사용자 전체를 잠금 효과`lock-in`[^3-38]안에 가두려는 마이크로소프트의 노력을 무력화하고 얼누리의 넓은 영역을 방어했기 때문이다.

[^3-38]: 역자주 ‘리버스 엔지니어링’ 또는 ‘프로그램 코드 역분석’이란 이미 생산돼 있는 하드웨어나 소프트웨어를 분석해 설계 구조나 기술명세 등을 역으로 알아내는 방법이다.

 1. 중요 배포판에 포함될 수 있는 작업이 그렇지 않은 경우보다 좋다. 모든 중요 배포판에 포함되면 최상의 명성을 얻을 수 있다.

중요 배포판에는 레드햇`Red Hat`이나 데비안`Debian`, 칼데라`Caldera`, 수세`SuSE: Software und System-Entwicklung` 같은 큰 배포회사의 제품뿐 아니라 BSD나 FSF 소스 모임집 같이 유지관리에 대한 독자적인 명성을 가져 암묵적인 품질 보증이 되는 것들도 포함된다.

 1. 사용된다는 것은 최고의 찬사이다. 또한 카테고리 킬러는 평범한 프로그램이 되는 것보다 낫다.

타인의 판단을 신뢰하는 것은 동료검토 과정의 기본이다. 대체 가능한 프로그램을 모두 검토할 시간이 있는 사람은 없기 때문에 이것은 필수적이다. 따라서 많은 사람이 사용하는 프로그램은 소수의 사람이 사용하는 것보다 더 나은 것으로 간주된다.

사람들이 다른 대체 프로그램에 관심을 두지 않을 정도의 프로그램을 만들게 되면 엄청난 명성을 얻을 수 있다. 모든 중요 배포판에 포함돼 폭넓게 사용되는 독창적인 카테고리 킬러를 만들면 동료들로부터 최상의 존경을 받을 수 있으며, 이런 일을 한 번 이상 성취하게 되면 농담 삼아 반신반인`demigod`으로 불리기도 한다.

 5. (디버깅이나 문서 작성과 같이) 힘들고 지루한 작업에 대한 지속적인 공헌은 재미있고 쉬운 일만 골라 하는 것보다 더 칭송될 만하다.

이 규칙은 해커들이 일반적으로 잘하려고 하지 않지만, 꼭 필요한 작업에 대해 공동체가 어떻게 보상하는가에 대한 설명이 될 수 있다. 그러나 이것은 다음과 같은 어느 정도의 모순이 있다.

 6. 기능의 중대한 확장은 저수준 패치와 디버깅보다 좋다.

하나의 작업을 기준으로 말한다면, 버그가 예외적으로 심각하거나 찾기 힘든 것이어서 그것을 고치는 것이 특별한 기술이나 솜씨를 드러내는 멋진 일이 아니라면, 버그 수정보다 새로운 기능을 추가하는 것이 더 많은 보상을 받을 수 있다. 그러나 긴 시간 동안 버그 수정 작업으로 지속적인 주목을 받아 온 사람은 단지 일반적인 버그를 수정하는 것으로도 쉬운 기능을 덧붙이는 데 비슷한 노력을 기울인 사람보다 높게 평가될 수 있다.

한 독자는 이러한 규칙들이 흥미로운 방법으로 상호작용하지만, 항상 최대 효용에 대해서만 보상하는 것은 아니라는 점을 지적해 주었다. 해커에게 자신이 만든 새로운 도구와 기존 도구에 자신이 추가한 확장기능 중 어느 쪽으로 유명해지길 원하느냐고 묻는다면 ‘새로운 도구’를 택할 것이 틀림없다. 그러나 (1) 새로운 이름의 도구가 OS에 의해 보이지 않는 형태로 가끔 사용되지만 빠르게 카테고리 킬러가 돼가는 경우와, (2) 새로운 것도 아니고 카테고리 킬러도 아닌 기존 도구에 대한 몇가지 확장기능이지만 많은 사용자에게 눈에 띄는 형태로 빈번하게 사용되는 두 가지 경우가 있다면 (1)을 선택하기에 앞서 망설이게 될 것이다. 이 두 가지는 거의 동일한 지위를 갖고 있다.

이 의견을 보내온 독자는 내가 만든 프로그램 중에서 (1)의 예로 페치메일, (2)의 예로 [vc.el](http://korea.gnu.org/people/chsong/cb/homesteading/vc.el)이나 [gud.el](http://korea.gnu.org/people/chsong/cb/homesteading/gud.el)같은 많은 이맥스 확장기능을 들었다. 실제로 그의 말이 맞다. 장기적으로 (2)가 더 높은 효용을 갖지만, 개인적으로 나는 ‘많은 이맥스 모드의 저자’보다는 ‘페치메일의 저자’로 알려지고 싶다.

이것은 새로운 ‘브랜드 정체성’을 갖는 작업이 기존 ‘브랜드’에 모이는 작업보다 많은 주목을 받는다는 것일 수 있다. 이러한 규칙들에 대한 설명과 그것이 해커 문화의 명성 부여 체계에 어떤 의미가 있는지는 앞으로 연구할 만한 좋은 주제가 될 것이다.

## 얼누리 소유권과 세력권의 동물행동학

로크 소유권 관습의 원인과 결과를 이해하려면 조금은 다른 관점인 동물행동학, 그 중에서 특히 세력권에 대한 동물행동학을 살펴보는 것이 도움이 될 것 같다.

소유권은 추상화된 동물 세력권, 즉 텃세권이다. 동물 세력권은 같은 종 안의 폭력을 줄이기 위해 진화되었다. 자신의 영역을 표시하고 다른 개체의 영역을 존중함으로써 늑대들은 상처를 입거나 죽을 지 모를 기회와 생식에 성공하지 못할 가능성을 줄인다. 이와 유사하게 인간 사회에서의 소유권은 평화로운 행동과 투쟁의 기준을 명확히 구분하는 경계를 설정함으로써 인간 사이의 분쟁을 막기 위한 것이다.

몇몇 학문 분야에서는 인간의 소유권을 임의적인 사회 관습으로 묘사하는 경향이 있지만, 이것은 매우 잘못된 것이다. 낯선 사람이 주인의 소유물에 접근했을 때 짖는 개를 소유해 본 적이 있는 사람은 동물의 세력권과 인간의 소유권 사이에 존재하는 본질적인 연속성을 경험해 본 것이다. 길들여진 늑대의 사촌인 개는 소유물이 단순한 사회적 관습이나 우열을 가리기 위한 것이 아니라 폭력을 피하기 위해 만들어진 매우 중요한 발전된 체제라는 사실을 본능적으로 알고 있다. (이 점에 있어 개들은 많은 정치 이론가보다 더 현명하다.)

소유권 주장은 (영역 표시와 같은) 실행 행위, 즉 지키고자 하는 영역을 선언하는 일이다. 소유권 주장에 대한 해커 공동체의 지원은 마찰을 최소화하면서 협력을 극대화하려는 방법이다. 이것은 ‘소유권 주장’이 단지 README 파일에 프로젝트 유지 관리자의 이름을 적는 것처럼 울타리나 개가 짖는 것보다 더 추상적일 때도 여전히 유효하다. README 파일 역시 세력권이 추상화된 것이며 세력권 보호 본능에서 나온 (다른 여러 소유권 형태처럼) 분쟁 해결을 지원하기 위해 발전된 것이다.

해커들의 실제 행동에 동물행동학적 분석을 연관시키는 것이 처음에는 매우 추상적이고 어려울 수 있다. 그러나 이것은 꽤 중요한 의미가 있는데, 그중 하나는 왜 WWW 사이트가 그렇게 인기를 끌게 됐는가와 특히 왜 웹 사이트를 갖고 있는 오픈소스 프로젝트가 그렇지 않은 경우에 비해 더 ‘실재적’이고 더 중요해 보이는지 설명할 수 있다는 점이다.

객관적으로 볼 때 이점은 설명하기가 쉽지 않다. 아주 작은 프로그램을 만들고 유지관리하는 데 필요한 노력과 비교해 본다고 해도 웹 페이지를 만드는 것은 쉬운 일이기 때문에 웹 페이지를 중요하거나 특별한 노력을 증명하는 것으로 생각하기는 쉽지 않다.

웹 자체의 기능적 특성으로도 충분한 설명이 되지 못한다. 웹 페이지의 의사소통 기능은 FTP나 메일링리스트, 유즈넷 등과 조합해야 그들과 비슷하거나 향상될 수 있다. 사실 프로젝트의 통상적인 의사소통이 메일링리스트나 뉴스그룹보다 웹을 통해 이루어지는 것은 매우 드문 일이다.[^3-39] 그렇다면 왜 프로젝트 근거지로 웹 사이트의 인기가 높을까?

[^3-39]: 역자주 이 글이 쓰여진 당시까지는 특히, 한국 이외의 국가에서는 홈페이지 안에 게시판을 두는 예가 드물었고 CMS(Contents Management System)도 개발되지 않은 시기였기 때문에 대부분의 의사교환은 메일과 뉴스그룹을 통해 이루어졌다.

‘홈페이지’라는 단어의 상징적 의미가 중요한 단서를 제공한다. 오픈소스 프로젝트를 만드는 것은 얼누리 안에서 세력권을 주장하는 일이다. (그리고 관례적으로 그렇게 받아들여진다.) 그러나 이것이 심리적인 차원에서까지 다른 사람을 강압하는 것은 아니다. 소프트웨어란, 결국 물리적인 공간을 갖지 못하며 쉽게 복제될 수 있기 때문이다. ‘세력권’과 ‘소유권’에 대한 우리의 본능적인 생각을 홈페이지에 동화시킬 수는 있지만 그렇게 하기 위해서는 어느 정도 노력이 필요하다.

프로젝트 홈페이지란 공간적으로 보다 조직화된 WWW 영역 안에 있는 프로그램의 공간을 ‘집`home`’으로 표현함으로써 추상적인 개간 개념을 구체화시킨 것이다. 얼누리를 사이버스페이스로 격하한다고 해도 우리가 현실 세계의 울타리와 짖는 개의 느낌을 가질 수 있는 것은 아니다. 그러나 네트워크와 하드웨어 요소를 개입시킨 사이버스페이스를 떠올리면 추상적인 소유권 주장과 영역에 대한 우리의 직관적인 연상을 보다 확실히 할 수 있다. 그리고 이것이 바로 홈페이지를 갖고 있는 프로젝트가 보다 실재처럼 보이는 이유다.

이것은 좋은 검색엔진의 존재와 하이퍼링크를 통해 한층 강화된다. 홈페이지를 갖고 있는 프로젝트는 얼누리에서 주변을 탐험하는 누군가에게 발견될 가능성이 더욱 높아진다. 링크가 만들어지고 검색도 될 것이다. 따라서 홈페이지는 더 나은 홍보 수단인 동시에 보다 효과적인 실행 행위이며, 더욱 강한 세력권 주장이다.

동물행동학적 분석은 오픈소스 문화 안의 분쟁 처리 체계를 좀 더 자세하게 살필 수 있게 해준다. 또한 소유권 관습이 명성 동기를 극대화하는 것뿐 아니라 분쟁을 예방하고 해결하는 역할도 해야 한다는 사실을 예상할 수 있게 해 준다.

## 분쟁의 원인

오픈소스 소프트웨어에서 나타나는 분쟁을 4가지 주된 문제로 구분할 수 있다.

* 프로젝트에 대한 구속력 있는 결정을 누가 내릴 것인가?

* 누가 무엇에 대해 보상받거나 비난받을 것인가?

* 어떻게 중복 노력을 줄이고, 버그 추적을 어렵게 만드는 비공식 패치를 막을 것인가?

* 기술적으로 말할 때 무엇이 옳은 것인가?

‘무엇이 옳은 것인가?’라는 마지막 문제를 다시 살펴보면, 이것은 별다른 문제가 되지 않는다는 것을 알 수 있다. 이런 종류의 질문에 대해서는 모두가 받아들일 수 있는 객관적인 결정 방법이 있을 수도 있고 없을 수도 있다. 만약 방법이 있다면 문제가 되지 않는다. 그러나 방법이 없다면 ‘누가 결정할 것인가?’라는 첫 번째 문제로 귀착된다.

따라서 프로젝트에 대한 분쟁 해결 이론은 다음 3가지 문제를 해결할 수 있어야만 한다. (가) 설계에 대한 최종 결정을 누가 내릴 것인가? (나) 어느 기여자에게 어떤 방법으로 공을 돌릴지 어떻게 결정할 것인가? (다) 프로젝트 모임과 제품이 여러 갈래로 분열되는 것을 어떻게 막을 것인가?

소유권 관습이 (가)와 (다)의 문제를 해결하는 역할을 할 수 있다는 점은 분명하다. 관습은 프로젝트의 소유자가 구속력 있는 결정을 내린다는 것을 확실히 한다. 관습은 프로젝트 분기 때문에 소유권이 약화되는 것을 강하게 억제하는 쪽으로 작용한다는 것은 이미 살펴본 바 있다.

이러한 관습은 해커 문화를 명성 게임이 아닌 순수한 ‘장인정신’ 문화로 간주할 때도 마찬가지로 성립한다는 점을 인식하는 것이 유용하다. 이 관점에서 볼 때 이러한 관습은 명성에 대한 동기를 줄이기보다 장인이 자신이 선택한 방법으로 미래 계획을 실행할 권리를 보호해 주는 쪽에 더 가깝다고 할 수 있다.

그러나 장인정신 모델은 누가 무엇에 대해 보상받을 것이냐는 (나)와 같은 해커 관습 안의 문제를 충분히 설명하지 못한다. 왜냐하면 명성 게임에 관심이 없는 순수한 장인은 명성에 주의를 기울일 동기가 없기 때문이다. 이것을 분석하려면 로크의 소유권 이론을 좀 더 진전시켜서 프로젝트 사이뿐 아니라 프로젝트 내부에서 소유권 작용과 분쟁이 어떻게 일어나고 있는지 살펴볼 필요가 있다.

## 프로젝트 구조와 소유권

프로젝트에 한 명의 단일 소유자나 유지관리자가 있을 때는 간단하다. 이때는 분쟁 가능성이 없다. 소유자가 모든 결정을 하고 보상과 비난 또한 모두 혼자 받는다. 발생 가능한 유일한 분쟁은 소유자가 사라지거나 프로젝트에 흥미를 잃었을 때 누가 소유권을 넘겨받는가 하는 승계 문제다. 공동체도 (다)의 관점에서 프로젝트의 분기를 막는데 이해관계가 있는데, 이는 프로젝트의 소유자나 유지관리자가 더 이상 프로젝트를 유지관리할 수 없게 됐을 때 소유권을 다른 사람에게 공개적으로 넘겨주어야만 한다는 문화 규범으로 나타난다.

가장 단순하면서 중요한 경우는 프로젝트를 소유한 한 명의 ‘자비로운 독재자’ 아래 여러 명의 공동 유지관리자가 있을 때다. 관습은 프로젝트 모임이 이런 형식을 취하는 것을 좋아한다. 리눅스 커널이나 이맥스 같은 대형 프로젝트가 이런 형식을 채택했는데, ‘누가 결정할 것인가?’라는 문제도 다른 경우보다 확연히 나쁘지는 않다는 것을 보여주었다.

자비로운 독재자 조직은 전형적으로 프로젝트를 만든 소유자나 유지관리자가 다른 기여자들을 끌어들인 조직에서부터 발전한다. 비록 소유자가 독재자로 남아 있더라도 이런 조직에서는 누가 프로젝트의 어떤 부분에 대해 보상받을지에 대한 새로운 차원의 논쟁이 생길 수 있다.

이런 상황에서 관습은 소유자인 독재자가 (예를 들어 README나 이력 파일에 적절한 언급을 넣는 방법을 통해) 공정하게 보상할 의무를 부여한다. 로크의 소유권 모델 측면에서 보면 이것은 프로젝트에 기여하는 것을 통해 (긍정적이든 부정적이든 간에) 명성 수익의 일부를 획득할 수 있다는 것을 의미한다.

이러한 논리를 살펴보면 사실 ‘자비로운 독재자’가 프로젝트 전체를 완전히 소유하지 않는다는 것을 알 수 있다. 그가 구속력 있는 결정을 내릴 수는 있지만 사실상 명성 수익 총액의 일부를 다른 사람의 작업과 바꾸는 거래를 하는 것이다. 이것은 농부의 땅을 부치는 소작농의 경우와 거의 같은데 차이가 있다면, 기여자의 이름은 README나 이력 파일 등에 남기 때문에 더 이상 활동하지 않을 때에도 일정 정도의 수익을 계속 얻을 수 있다는 점이다.

자비로운 독재자 모델의 프로젝트는 참여자가 많아질수록 구성원이 두 계층으로 나뉘는 경향이 있다. 그것은 일반 기여자와 공동 개발자다. 공동 개발자가 되는 전형적인 방법은 프로젝트의 중요한 일부를 맡는 것이다. 또 하나는 많은 버그를 찾아 고치는 ‘수정의 대가’가 되는 것이다. 공동 개발자는 이런 방법이나 또 다른 방법을 통해 지속적이고 많은 시간을 프로젝트에 투자하는 기여자다.

프로젝트의 하위 일부분을 책임진 사람의 역할은 특히 중요하기 때문에 좀 더 살펴볼 필요가 있다. 해커들은 ‘권한에는 책임이 따른다’고 말하길 좋아한다. 주어진 부분의 유지관리 책임을 받아들인 공동 개발자는 일반적으로 그 부분의 구현과 다른 부분과의 인터페이스를 모두 제어할 수 있으며, 이것은 (마치 설계자가 그렇게 하듯) 프로젝트 소유자에 의해서만 정정될 수 있다. 이러한 규칙은 프로젝트 내부의 로크 소유권 모델로서 소유지 내부를 효과적으로 분할한다는 것을 알 수 있다. 또한 다른 소유지 경계처럼 분쟁을 방지하는 역할도 한다.

공동 개발자가 있는 ‘독재자’ 또는 프로젝트 지도자는 관습에 따라 공동 개발자에게 핵심 결정에 대한 의견을 구할 것이 기대된다. 이것은 특히 공동 개발자가 ‘소유한’ (즉 책임을 맡아 시간을 투자하고 있는) 하위 부분에 대한 결정일 때 특히 그러하다. 현명한 지도자는 프로젝트 내부의 소유지 경계가 가진 기능을 알고 있기 때문에 경솔하게 하위 부분의 소유자가 내린 결정에 반대하거나 뒤집지 않는다.

매우 큰 몇몇 프로젝트는 ‘자비로운 독재자’ 모델을 완전히 버리기도 한다. 한 방법은 (아파치 프로젝트처럼) 공동 개발자 체제를 투표를 통한 위원회 구성으로 바꾸는 것이다. 또 다른 방법은 독재자 자리를 원로 공동 개발자들이 가끔씩 돌아가며 교대하는 것이다. 펄 개발자들은 이 방법으로 공동체를 구성하고 있다.

그러나 이런 복잡한 제도는 안정적이지 않고 어려운 것으로 널리 인식되고 있다. 어려움은 확실히 위원회에 의한 설계나 위원회 자체에 대해 알려진 위험으로부터 대부분 기인하며, 이것은 해커 문화에서 의식적으로 이해되고 있다. 그러나 위원회나 회전식 지도 조직에 대해 해커들이 느끼는 본능적인 불편함은 보다 간단한 경우에는 할 수 있는 무의식적인 로크 소유권 모델 추론이 여기서는 힘들다는 데 있다고 나는 생각한다. 이런 복잡한 조직에서는 통제의 의미로서의 소유권이나 명성 수익의 소유권에 대해 설명을 하는 데 문제가 있다. 또한 내부 경계에 대한 구분이 어렵고 이에 따라서 모임이 예외적으로 높은 수준의 조화와 신뢰를 갖고 있지 않는한 분쟁을 피하기 힘들게 된다.

## 분쟁과 분쟁 해결

지금까지 프로젝트 내부에서 커져가는 역할의 복잡성이, 부분 소유권과 설계 권한의 분배로 나타난다는 것을 살펴보았다. 이것은 동기를 효과적으로 분배하는 방법이기는 하지만 프로젝트 지도자의 권한을 감소시키는데, 그중 가장 중요한 점은 잠재적인 분쟁을 억누르는 프로젝트 지도자의 권한이 약화된다는 것이다.

설계에 대한 기술 논쟁은 내부 분쟁에서 가장 눈에 띄는 위험이지만, 이것이 심각한 투쟁으로 이어지는 경우는 드물다. 이것은 보통 ‘권한에는 책임이 따른다’는 세력권 규칙에 따라 비교적 쉽게 해결된다.

분쟁 해결의 또 다른 방법은 서열에 의한 것이다. 두 명의 기여자 또는 기여자 집단 사이의 분쟁이 객관적으로는 해결될 수 없고, 분쟁 당사자 모두가 해당 영역의 소유자가 아닐 경우에는 프로젝트 전체에서 더 많은 작업에 기여한 (즉 프로젝트 전체에서 더 많은 소유권을 가진) 쪽이 이긴다.

(같은 얘기지만 기여한 몫이 적은 쪽이 패배한다. 흥미롭게도 이것은 많은 관계형 데이터베이스 엔진이 교착상태`deadlock`[^3-40]를 해결하는 경험적 판단 방식`heuristic`과 유사하다. 두 개의 스레드`thread`가 한 자원을 놓고 교착상태에 있을 때, 현재 트랜잭션`transaction`[^3-41]에 더 적게 투입된 스레드가 희생자로 선택돼 종료된다. 이것은 일반적으로 가장 긴 시간 동안 실행되고 있는 트랜잭션, 즉 서열이 더 높은 트랜잭션이 승리한다는 것을 의미한다.)

[^3-40]: 역자주 교착상태(deadlock)란 두 개 이상의 프로세스가 서로 다른 프로세스에서 사용되고 있는 자원을 요구해 발생하는 대치 상태를 의미한다. 예를 들어 A가 B의 응답을 요구하고, B는 A의 결과를 요구하는 맞물린 상태가 되면 결국 어느 쪽도 더 진행하지 못하고 멈춰 있게 된다.

[^3-41]: 역자주 트랜잭션(transaction)이란 데이터베이스 갱신 처리를 위해 하나로 단위로 묶어 취급되는 일련의 수행 과정을 말한다. 일반적으로 1회의 명령을 가리킨다.

이러한 규칙은 일반적으로 대부분의 프로젝트 분쟁을 해결하기에 충분하다. 그렇지 못할 경우에는 프로젝트 지도자의 명령으로 해결할 수 있다. 이 방법들로 해결할 수 없는 분쟁은 거의 없다.

일반적으로 분쟁은 (‘권한에는 책임이 따른다는 것’과 ‘서열이 높은 쪽이 이긴다’는) 2가지 경우를 벗어나거나 프로젝트 지도자의 권한이 약해지거나 없어진 경우가 아니라면 심각해지지 않는다. 이것이 발생할 수 있는 가장 분명한 예는 프로젝트 지도자가 없어진 뒤의 후계 다툼이다. 나는 이러한 종류의 싸움에 관여한 적이 있었다. 그것은 추하고 고통스럽게 오랫동안 지속됐으며 모든 당사자가 지칠 대로 지쳐 제어권을 외부 사람에게 넘겨줬을 때에야 비로소 해결되었다. 나는 이러한 종류의 분쟁에 두 번 다시 관여하지 않게 되기를 진심으로 바란다.

결국, 이 모든 분쟁 해결 방법의 보장은 그것을 강제할 해커 공동체 전체의 의사에 달려 있다. 사용할 수 있는 유일한 강제 수단은 비난과 기피다. 관습을 어긴 사람을 공개적으로 비난하고 함께 작업하는 것을 거부하는 것이다.

## 문화적응과 학계로의 연결

이 글의 초판은 다음과 같은 향후 과제를 제시했었다. ‘공동체는 구성원에게 관습을 어떻게 알리고 교육하는가? 관습은 자명한 것인가 아니면 반의식적인 차원에서 자기조직화되는 것인가? 관습은 실례를 통해 학습되는가? 명시적인 교육으로 학습되는가?’

명시적인 교육을 통한 학습은 매우 드물다. 왜냐하면 교육을 위한 해커 문화 규범에 대한 명시된 설명이 아직까지 거의 없기 때문이다.

많은 규범이 선례를 통해 학습된다. 가장 간단한 경우를 들면, 모든 소프트웨어 배포판에는 배포판에 대한 설명을 제일 먼저 참고할 수 있는 README 또는 READ.ME라고 불리는 파일이 포함돼야 한다는 규범이 있다. 이 관습은 최소한 1980년대 초반부터 잘 확립되어 왔으며 때때로 명문화되기까지 했지만 일반적으로 다른 많은 배포판의 사례를 통해 전승된 것이다.

반면에, 일단 명성 게임에 대한 기초적인 이해를 (무의식적으로) 하게 되면 어떤 해커 관습들은 자기조직화되기도 한다. 해커들은 대부분 이 글에서 언급한 3가지 금기에 대해 교육받은 적이 전혀 없을 것이다. 또한 금기에 대해 질문받는다면, 최소한 그것들이 누구에게 전해 들어야 하는 것이 아닌 자명한 것이라고 주장할 것이다. 이러한 현상은 좀 더 자세한 분석이 필요한데, 아마도 해커들이 해커 문화에 대한 지식을 얻게 되는 과정에서 그 설명을 발견할 수 있을 것이다.

많은 문화가 문화적응의 방법으로 숨겨진 암시를 (보다 자세히 말하면 종교나 신비적인 의미에서의 ‘수수께끼’를) 사용한다. 이것은 외부인에게 드러나지 않는 비밀이지만, 열성적인 초심자는 스스로 발견하거나 추론할 수 있을 것으로 기대된다. 한 문화 안으로 받아들여지기 위해서는 이러한 수수께끼를 문화적으로 인정된 방법으로 배우고 이해했다는 것을 모두 증명해야만 한다.

해커 문화는 이러한 종류의 수수께끼나 통과 의례를 이상할 정도로 의식적으로 많이 사용하는데, 적어도 3가지 수준에서 이러한 과정이 이루어지는 것을 볼 수 있다.

* 패스워드와 같은 구체적인 수수께끼가 있다. 예를 들어 alt.sysadmin.recovery 라는 이름의 뉴스그룹에는 이러한 종류의 매우 확실한 비밀이 있다. 패스워드를 모르면 글을 올릴 수 없고, 패스워드를 아는 것은 글을 올릴 수 있다는 것을 증명한 것으로 간주된다.[^3-42] 정규 회원들은 이러한 비밀이 노출되는 것에 대해 매우 강한 금기를 갖고 있다.

[^3-42]: 역자주 『다빈치 코드 (1), 댄 브라운, 양선아 옮김, 베텔스만, 2004년, ISBN: 9788957590515』에 이와 연관된 언급이 있다.  「암호표기법에서 우리는 이걸 자기승인언어(self-authorizing language)라고 불러요. 즉 당신이 그것을 풀어낼 정도로 영리하다면, 거기에 씌어 있는 것을 알 자격이 당신에게 있다는 거죠.(317페이지)」

* 특정한 기술 수수께끼의 입문에는 선결 요건이 있다. 가치 있는 증여를 하려면, (예를 들어 중요 컴퓨터 언어 중에서 최소한 한가지는 알아야 하는 등의) 상당한 양의 기술 지식을 습득해야만 한다. 이러한 요구사항은 (추상적인 사고와 끈기 그리고 정신적 유연성과 같이) 그 문화 안에서 활동하는 데 필요한 자격을 걸러내는 것으로, 일반적으로 작은 문화에서 숨겨진 수수께끼가 하는 것과 같은 기능을 한다.

* 가장 상위 차원에서 볼 때, 사회적 맥락의 수수께끼가 존재한다. 한 사람은 특정한 프로젝트에 참여하는 방법을 통해 문화에 동화된다. 각각의 프로젝트는 장래의 기여자들이 기술적으로 기능하는 것을 학습할 수 있는 장소인 동시에 사회적으로 연구하고 이해해야 할 해커들의 살아있는 사회 환경이다. (구체적으로 말하면 이러한 것을 할 수 있는 일반적인 방법은 프로젝트 홈페이지의 글이나 보관돼 있는 메일링 리스트를 읽는 것이다.) 노련한 해커들의 행동 예를 초심자들이 학습할 수 있는 것은 바로 이런 방법을 통해서다.

이러한 수수께끼를 학습하는 과정에서 미래의 해커는 배경 지식을 얻어 (얼마 후에는) 3가지 금기와 그 밖의 관습들을 자명하게 여길 수 있게 된다.

해커 증여문화 그 자체가 가장 핵심적인 수수께끼라고 주장할 사람이 있을지도 모른다. 명성 게임과 그것이 함축하고 있는 관습과 금기, 이용법에 대한 이해를 납득할 만한 수준에서 입증하지 못하면 해커 문화에 동화되지 못한 것으로 간주된다. (구체적으로 말하면 어느 누구도 여러분을 해커라고 부르지 않을 것이다.) 그러나 이것은 사소한 문제다. 왜냐하면 모든 문화는 그 안으로 들어오려는 모든 사람에게 이러한 이해를 요구하기 때문이다. 더 나아가서 해커 문화는 내부 논리와 습속을 비밀로 하지 않음을 분명히 밝히고 있다. 최소한 그 누구도 이 글을 통해 비밀을 드러내고 있는 나를 비난하지 않았다!

이 글을 읽고 의견을 준 독자들은 해커 소유권 관습이 학계의 관행, 특히 과학 연구 공동체와 밀접하게 관련돼 있다는 (그리고 어쩌면 거기서 직접 파생된 것일지도 모른다는) 지적을 너무나 많이 해 주었다. 과학 연구 공동체는 잠재적으로 생산적인 아이디어의 세력권을 확보하는데 유사한 문제를 갖고 있으며, 이런 문제를 해결하는데 있어서도 동료검토와 명성을 이용하는 매우 유사한 적응 해결 방법을 갖고 있다.

(대학에서 해킹 방법을 배우는 것이 일반적인 것처럼) 많은 해커들이 형성 단계에서 학계에 노출되기 때문에, 관습이 어떻게 적용되는가를 이해하는 데 있어 학계와 해커 문화가 공유하는 적응 양식에 대한 관심은 단순한 것 이상이 된다.

이 글에서 특징지었던 해커 증여문화와 분명하게 일치되는 부분이 학계에는 아주 많이 존재한다. 연구원이 일단 대학의 종신 재직권을 갖게 되면 더 이상 생계 문제로 걱정할 필요가 없다. (실제로 종신 재직권의 개념은, 부유한 사람들이 자연과학자로 자신의 시간을 연구에 몰두할 수 있던 초기의 증여문화로 거슬러 올라갈 수 있다.) 생존 문제가 없어진 상황에서는 명성을 높이는 것이 주된 목표가 되기 때문에 저널이나 다른 매체 등을 통해 새로운 생각과 연구를 공유하는 것이 장려된다. 이것은 객관적이고 기능적인 측면에서 일리가 있다. 왜냐하면 과학 연구는 해커 문화와 마찬가지로 ‘거인의 어깨 위에 선 난쟁이’[^3-43]라는 개념에 크게 의존하고 있으며, 기본 원리를 반복적으로 재발견해야 돼서는 안 되기 때문이다.

[^3-43]: 역자주 ‘거인의 어깨 위에 서 있다(standing upon the shoulders of giants)’는 표현은 아이작 뉴턴(Isaac Newton, 1643∼1727)의 “내가 다른 사람보다 멀리 보았다면, 그것은 내가 거인의 어깨 위에 서있었기 때문이다”라는 말에서 유래한다. 이것은 많은 세월을 통해 쌓인 지식의 토대가 있기 때문에 개인적으로 비교하면 과거의 천재들보다 우월하지 못함에도 불구하고 더 깊이 있고 발전된 지적 결과물을 만들어 낼 수 있다는 의미다.

어떤 사람들은 해커 문화란 단지 연구 공동체 습속의 반영일 뿐이고 실제로 (대부분의 경우는) 해커 개개인이 그곳에서 습득한 것이라고 말한다. 그러나 어느 정도 지적 능력을 갖춘 고등학생 정도 수준으로도 해커 문화를 쉽게 습득할 수 있다는 점을 고려하면 이는 지나친 생각일 듯싶다.

## 교환을 능가하는 증여

좀 더 흥미 있는 가능성도 있다. 나는 학계와 해커 문화가 적응 양식을 공유한다고 생각한다. 그 이유는 이들이 발생적으로 연관되어 있기 때문이 아니라 주어진 자연 법칙과 인간의 본능적 관계 맺음을 토대로, 각자 원하는 것을 실현할 수 있는 최적의 사회 조직을 발전시켰기 때문이다. 역사적인 판단으로 볼 때 자유 시장 자본주의는 경제적 효율성을 위해 협력할 수 있는 전 세계적인 최적의 방법일 것이다. 아마도 이와 비슷한 방식으로, 명성 게임 증여문화는 고품질의 창조적 작업을 만들기 위해 (그리고 점검하기 위해) 협력할 수 있는 전 세계적인 최적의 방법이다.

예술과 보상 사이의 상호작용에 대한 광범위한 심리학적 연구가 이 이론을 뒷받침한다.[^3-44] 이 연구들은 마땅히 더 많은 주목을 받았어야 했지만 그렇지 못했는데, 그 부분적인 이유는 아마도 연구 결과의 대중화가 자유 시장과 지식재산에 반대하는 총공격처럼 과잉 해석되는 경향이 있기 때문일 것이다. 그럼에도 불구하고 연구 결과들은 희소 경제에서 특정한 종류의 보상이 프로그래머와 같은 창조적인 노동자의 생산성을 실제로 줄인다는 것을 보여준다.

[^3-44]: 원주 자유 소프트웨어 재단 홈페이지에 이러한 많은 연구 결과를 [요약한 글](https://web.archive.org/web/19980126190142/http:/www.gnu.org/philosophy/motivation.html)이 실려있다. 이 단락의 내용은 그 글에서 발췌한 것이다.

브랜다이스 대학교`Brandeis University`의 심리학자 테레사 아마빌레`Theresa Amabile`는 동기와 보상에 대한 1984년 연구 결과를 조심스럽게 요약하며 다음과 같이 말한다. “의뢰된 작업은 순수한 관심에서 만들어진 작업에 비해 일반적으로 덜 창조적일 수 있다. 활동이 복잡해질수록 외적 보상에 의한 손상은 더욱 커진다.” 이 연구들은 흥미롭게도 균일한 급여는 의욕을 꺾지 않지만, 성과급이나 보너스는 그렇게 한다는 것을 보여준다.[^3-45]

[^3-45]: 역자주 [이 논문](http://www.pages.pomona.edu/~ajr04747/Fall2008/Math58/Papers/Amabile_1985_psp-48-2-393.pdf)이 발표된 올바른 해는 1985년이다. 연구 방법은 먼저 실험 대상을 3개의 집단으로 나눈다.  한 집단에는 대학원 입시 가산점, 금전적인 수익, 선생님에게 좋은 인상은 남기는 것 등의 외적인 이유를 준다. 다른 한 집단에는 글을 쓰는 데서 오는 자기만족 같은 내적인 이유를 준다. 그리고 나머지 한 집단에는 아무런 이유를 주지 않고 시를 쓰게 한 다음 12명의 시인으로 구성된 심사위원이 평가해 어떤 조건에서 가장 좋은 작품이 나오는지 알아보았다. 본문의 내용처럼 내적인 이유를 갖고 쓴 시가 가장 좋은 평가를 받았으며, 외적인 이유로 쓴 시는 가장 창조성이 떨어졌을 뿐 아니라 작품 수준도 현저히 떨어졌다. 따라서 고수준의 문제 해결 작업을 포함한 창조적 작업에서는 외적 동기와 보상이 오히려 파괴적 결과를 가져온다고 볼 수 있다.

따라서 저임금 육체 노동자에게 성과 보너스를 주는 것은 경제적으로 현명하지만, 프로그래밍 분야에서는 성과와 급여를 결부시키지 않고 프로그래머 스스로 프로젝트를 선택하게 하는 것이 더 현명한 방법일 수 있다. (오픈소스 세계는 이러한 논리적 결론을 따르고 있다.) 결국, 연구 결과가 의미하는 것은 프로그래밍 작업에 있어 성과 보상이 좋은 아이디어인 유일한 경우는 프로그래머가 강한 동기를 갖고 있어서 보상 없이도 일하게 되는 때라는 것이다!

일반적으로 목적 그 자체보다 수단으로서 어떤 일을 부여하면, 의욕이 저하되는 것으로 보인다. 만약 이런 방식으로 승리를 일에 대한 보상처럼 경험하게 되면 다른 사람과의 경쟁에서 이기는 것이나 동료의 존경을 얻는 것에서조차 의욕이 꺾일 수 있다. (이 관점으로 왜 해커들이 명시적으로 존경을 추구하거나 요구하는 것이 문화적으로
금지되는지를 설명할 수 있다.)

이 분야의 다른 연구자들은 해커들을 강박하는 자율성과 창조적 통제 문제에 더 주목한다. 로체스터 대학교`University of Rochester` 심리학과 부교수 리처드 라이언`Richard Ryan`은 다음과 같이 말한다. “자기의사결정 경험이 제한적일수록 창조성 역시 줄어든다.”

통제적인 구두 의견 전달은 성과급이 의욕을 꺾는 것과 같은 작용을 하는 것으로 보이며 경영관리 문제를 더 어렵게 만든다. 라이언의 견해에 따르면 “그래, 제대로 일을 하고 있어. 당연히 그렇게 해야지”라는 식의 말을 들은 회사 종업원은 정보전달식으로 의견을 들은 사람에 비해 의욕이 본질적으로 저하된다.

성과급 제공은 여전히 현명한 방법일 수 있다. 하지만 제대로 작동하려면 조건이 없어야 한다. 라이언의 관찰에 따르면 다음 두 말에는 결정적인 차이가 있다. (1) “당신 작업의 가치를 알기 때문에 보상하는 거야”와 (2) “회사의 기준을 충족했기 때문에 보상하는 거야.” 전자는 의욕을 꺾지 않지만 후자는 그렇다.

이러한 심리학적 관찰을 통해 우리는 희소한 보상에 따라 의욕이 생기거나 없어지는 동등한 규모와 기술을 가진 폐쇄소스 프로그래머 모임보다 (특히 장기적으로 볼 때 창조성이 생산성 승수로서 보다 결정적인 역할을 하는) 오픈소스 개발 모임이 실질적으로 더 생산적이 되는 경우의 근거를 만들 수 있다.

이것은 「성당과 시장」에서 다룬 것과 조금 다른 각도의 조명이지만, 궁극적으로 프로그래머들이 탈희소성`post-scarcity` 증여 문화에서 살아가기에 충분한 잉여 재화를 자본주의가 생산하기 시작한 때부터 소프트웨어 생산 산업/공장 모델은 경쟁력을 잃을 운명이었다는 것을 의미한다.

확실히, 최상의 소프트웨어 생산성을 위한 처방은 역설로 가득 찬 선문답처럼 들린다. 가장 효율적인 제품을 원한다면, 프로그래머가 생산하게끔 만들 시도를 포기해야만 한다. 그 대신 그들의 생계를 보장하고, 스스로 생각하게끔 하고, 마감 기일을 잊어야 한다. 전통적인 관리자에게 이것은 일을 망치는 미친 소리처럼 들리겠지만, 이것이 바로 지금의 오픈소스 문화가 경쟁을 압도하고 있는 바로 그 처방이다.

## 결론: 관습에서 관습법으로

지금까지 오픈소스 소프트웨어의 통제와 소유권을 규율하는 관습에 대해 살펴보았다. 그리고 그 근본 개념이 로크의 토지 소유권 이론과 유사한, 근본적인 소유권 이론을 함축하고 있다는 것도 알아보았다. 우리는 명성을 획득하기 위해 참여자들이 시간과 에너지 그리고 창조성을 무료로 선물하며 경쟁하는 ‘증여문화’로서의 해커 문화 분석에 소유권 이론을 연관시켰다. 또한 이러한 분석이 해커 문화 안에서 일어나는 분쟁 해결에 갖는 의미를 살펴보았다.

이제 다음 단계로 생각해 볼 수 있는 논리적 질문은 “이것이 왜 중요한가?”이다. 해커들은 이러한 관습을 의식적인 분석 없이 발전시켰으며, 또한 (지금까지) 의식적인 분석 없이 따르고 있다. 의식적인 분석이 어떤 현실적인 이익을 가져다줄 수 있다고 당장 분명하게 말하기는 어려울 것 같다. 만약 그렇다면 이 글은 아마도 기록이 아닌 처방으로 넘어가 해커 문화의 기능을 개선할 방법들을 추론할 수 있을 것이다.

우리는 해커 문화와 영미 보통법 전통의 토지 소유권 이론이 밀접한 논리적 유사성을 갖고 있음을 알 수 있었다. 역사적으로 볼 때[^3-46], 이러한 전통을 낳은 유럽의 부족 문화들은 그들의 분쟁 해결 체제를 분명하지 않은 반의식적인 관습으로부터 부족 현자들의 기억으로 전승되는 분명한 관습법의 형태로 발전시켰고, 마침내는 성문화시켰다.

[^3-46]: 원주 아이슬란드 민회법에 대한 탁월한 연구로서 로크 소유권 이론의 계보를 조명하고 이러한 관습이 관습법으로 이어진 뒤 성문법이 되는 역사 과정의 단계를 자세하게 설명한 다음 책이 좋은 참고가 될 수 있다. 『Bloodtaking and Peacemaking: Feud, Law, and Society in Saga Iceland, William Ian Miller, University of Chicago Press, 1990, ISBN: 0226526801』

아마도 우리 인구가 늘어나서 새로운 구성원 모두가 해커 문화에 적응하는 것이 힘들어질 때가 오면 해커 문화도 유사한 것을 만들어내야 할 것이다. 즉 오픈소스 프로젝트와 관련해 발생할 수 있는 다양한 종류의 분쟁을 해결하기 위한 좋은 관행에 대한 명문화된 법을 만들어야 하며, 공동체 원로들에게 분쟁 조정을 요청할 수 있는 중재의 전통을 세워야 할 것이다.

이 글의 분석은 기존의 암묵적인 형태를 명시적인 형태로 만들어주는 그런 법의 모습이 어떤 윤곽을 가져야 하는가에 대한 제안이다. 이러한 법은 상명하달식으로 시행되는 것이 아니라 개별 프로젝트의 창시자나 소유자에 의해 자발적으로 채택되어야 한다. 문화에 대한 법의 압력은 시간이 흐름에 따라 변하기 마련이기 때문에 완전히 고정된 법이어서도 안 된다. 마지막으로 그러한 법이 강제력을 가질 수 있으려면 해커 부족의 광범위한 합의가 반영되어야만 한다.

나는 그런 법을 만드는 작업을 시작하고 있으며, 내가 사는 작은 마을의 이름을 붙여 임시로 ‘맬번 프로토콜`Malvern Protocol`’이라고 이름 지었다. 만약 이 글의 일반적인 분석이 충분히 널리 받아들여진다면, 나는 분쟁 해결을 위한 법의 모형으로 이용할 수 있게 맬번 프로토콜을 공개하려고 한다. 이 법의 개발이나 논평에 관심이 있거나 단순히 좋고 나쁨에 대한 의견을 보내줄 의사가 있는 경우에도 <esr@ thyrsus.com> 앞으로 연락할 수 있다.

## 앞으로의 연구 과제

해커 문화는 (그리고 나 자신도) 자비로운 독재자 모델을 따르지 않는 큰 프로젝트에 대해 깊이 있게 이해하지 못하고 있다. 이런 프로젝트들은 대부분 실패했으며, (펄과 아파치, KDE와 같은) 소수만 극적으로 성공하고 또한 중요해졌다. 차이점이 무엇인가는 그 누구도 정확히 알지 못한다. 이런 프로젝트는 독특한 형태를 갖고 있으며 특별한 구성원들의 역할에 의해 성공하거나 실패한다는 막연한 생각이 널리 받아들여지고 있을 뿐이다. 이것이 사실인지 그리고 다른 프로젝트가 모방할 만한 전략이 있는지를 분석하는 것이 앞으로의 과제일 것이다.

## 감사의 글

로버트 랜피어`Robert Lanphier, robla@real.com`는 이기적이지 않은 행위에 대한 논의에 많은 도움을 주었다. 에릭 키드`Eric Kidd, eric.kidd@pobox.com`는 개인숭배를 막는 데 있어 겸손을 중시하는 것의 중요성을 지적해 주었다. 명성 게임 모델의 포괄적인 의미는 대니얼 번`Daniel Burn, daniel@tsathoggua.lab.usyd.edu.au`의 의견에서 영감을 얻었다. 마이크 휘터커`Mike Whitaker, mrw@entropic.co.uk`는 문화적응 단락의 주된 논제에 대해 많은 영감을 주었으며, 크리스 피닉스`Chris Phoenix, cphoenix@best.com`는 다른 해커를 폄하하는 것으로 명성을 얻을 수 없다는 사실의 중요성을 지적해 주었다. A. J. 벤터`A.J. Venter, JAVenter@africon.co.za`는 해커 문화와 중세 기사도 이념의 유사성에 대해 알려주었다. 이언 랜스 테일러`Ian Lance Taylor, ian@airs.com`는 명성 게임 모델에 대한 내 가정을 좀 더 분명하게 생각하고 설명할 수 있게 해준 신중한 비평을 보내주었다.

이들 모두에게 다시 한 번 감사의 말을 전한다.

---

![](figures/sagrada-04.jpg "")

사그라다 파밀리아 성당, (왼쪽) 수난의 문 부조[^3-37]

[^3-37]: 역자주 Copyright 2011 Sagrada Família. 이 이미지는 크리에이티브 커먼즈 <저작자표시-동일조건변경허락 3.0 카탈루냐 이용허락>에 따라 이용할 수 있다.

건물은 말을 한다. 그것도 쉽게 분별할 수 있는 주제들에 관해 말을 한다. 건물은 민주주
의나 귀족주의, 개방성이나 오만, 환영이나 위협, 미래에 대한 공감이나 과거에 대한 동
경을 이야기한다.
— 알랭 드 보통`Alain de Botton`, 『행복의 건축, 이레, 2007년, 76페이지』



